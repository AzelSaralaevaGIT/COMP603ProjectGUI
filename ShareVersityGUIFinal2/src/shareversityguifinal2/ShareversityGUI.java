package shareversityguifinal2;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Dialog.ModalityType;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.text.PasswordView;

/**
 *
 * @author Fran
 */

public class ShareversityGUI extends javax.swing.JFrame 
{
    private static final int WINDOWWIDTH = 1024;
    private static final int WINDOWHEIGHT = 764;
    private static final int SCREENWIDTH = Toolkit.getDefaultToolkit().getScreenSize().width;
    private static final int SCREENHEIGHT = Toolkit.getDefaultToolkit().getScreenSize().height;
    
     // TEMP -- data for testing graph output
    private static final ImportedCompanies importedCompanies = new ImportedCompanies();
    private static final InvestmentType lowRiskInvestments = new LowRiskInvestment(importedCompanies);
    private static final InvestmentType startupInvestments = new StartUpInvestment(importedCompanies);
    
    /**
     * Creates new form ShareVersityGUI
     */
    public ShareversityGUI() {
        this.mainCardLayout = new CardLayout();
        this.loginRegisterCardLayout = new CardLayout();
        this.menuCardLayout = new CardLayout();
        account = new Account();
        
        initComponents();   
        
        getContentPane().setLayout(mainCardLayout);
        getContentPane().add(loginRegisterPanel, "loginRegisterPanel");
        getContentPane().add(menuPanel, "menuPanel");
        
        loginRegisterRightPanels.setLayout(loginRegisterCardLayout);
        loginRegisterRightPanels.add(loginRightPanel, "login");
        loginRegisterRightPanels.add(registerRightPanel, "register");
        
        menuRightPanels.setLayout(menuCardLayout);
        menuRightPanels.add(portfolioRightPanel, "portfolio");
        menuRightPanels.add(portfolioInvestInfoRightPanel, "portfolioInvestInfo");
        menuRightPanels.add(portfolioSharesSoldRightPanel, "portfolioSharesSold");
        menuRightPanels.add(investRightPanel, "invest");
        menuRightPanels.add(investBuySharesRightPanel, "buyShares");
        menuRightPanels.add(investBuySharesConfirmationRightPanel, "buySharesConfirmation");
        menuRightPanels.add(investInfoRightPanel, "investInfo");
        menuRightPanels.add(walletRightPanel, "wallet");
        menuRightPanels.add(accountInfoRightPanel, "accountInfo");
        
        mainCardLayout.show(this.getContentPane(), "loginRegisterPanel");
        
        menuButtonList = new ArrayList<>(); 
        
        menuButtonList.add(portfolioButton);
        menuButtonList.add(investButton);
        menuButtonList.add(walletButton);
        menuButtonList.add(accountInfoButton);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valueNumSharesButtonGroup = new javax.swing.ButtonGroup();
        warningDialogue = new javax.swing.JDialog();
        warningDialoguePanel = new javax.swing.JPanel();
        warningDialogueTitle = new javax.swing.JLabel();
        warningDialogueIcon = new javax.swing.JLabel();
        warningDialogueDesc = new javax.swing.JLabel();
        warningDialogueButtonPanel = new javax.swing.JPanel();
        warningOkButton = new javax.swing.JButton();
        confirmationDialogue = new javax.swing.JDialog();
        confirmationDialoguePanel = new javax.swing.JPanel();
        confirmationDialogueTitle = new javax.swing.JLabel();
        confirmationDialogueIcon = new javax.swing.JLabel();
        confirmationDialogueDesc = new javax.swing.JLabel();
        confirmationDialogueButtonPanel = new javax.swing.JPanel();
        confirmationOkButton = new javax.swing.JButton();
        confirmationCancelButton = new javax.swing.JButton();
        loginRegisterPanel = new javax.swing.JPanel();
        loginRegisterLeftPanel = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        loginRegisterRightPanels = new javax.swing.JPanel();
        loginRightPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginPasswordLabel = new javax.swing.JLabel();
        loginUsernameLabel = new javax.swing.JLabel();
        loginUsernameTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        registerHereButton = new javax.swing.JLabel();
        registerMsgLabel = new javax.swing.JLabel();
        showHidePasswordPanel = new javax.swing.JPanel();
        loginPasswordTextField = new javax.swing.JPasswordField();
        hidePasswordCheckBox = new javax.swing.JCheckBox();
        registerRightPanel = new javax.swing.JPanel();
        newAccountLabel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        loginHereButton = new javax.swing.JLabel();
        loginMsgLabel = new javax.swing.JLabel();
        registerUsernameLabel = new javax.swing.JLabel();
        registerUsernameTextField = new javax.swing.JTextField();
        registerPasswordTextField = new javax.swing.JTextField();
        registerPasswordLabel = new javax.swing.JLabel();
        registerFullNameTextField = new javax.swing.JTextField();
        registerFullNameLabel = new javax.swing.JLabel();
        registerBankAccountLabel = new javax.swing.JLabel();
        registerDayComboBox = new javax.swing.JComboBox<>();
        registerYearComboBox = new javax.swing.JComboBox<>();
        registerMonthComboBox = new javax.swing.JComboBox<>();
        RegisterDateOfBirthLabel = new javax.swing.JLabel();
        registerBankAccountNumber = new javax.swing.JFormattedTextField();
        menuPanel = new javax.swing.JPanel();
        menuSplitPanel = new javax.swing.JSplitPane();
        menuLeftPanel = new javax.swing.JPanel();
        logo2 = new javax.swing.JLabel();
        accountInfoButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        walletButton = new javax.swing.JButton();
        portfolioButton = new javax.swing.JButton();
        investButton = new javax.swing.JButton();
        menuWalletBalance = new javax.swing.JPanel();
        menuWalletBalanceTitle = new javax.swing.JLabel();
        menuWalletBalanceValue = new javax.swing.JLabel();
        menuRightPanels = new javax.swing.JPanel();
        portfolioRightPanel = new javax.swing.JPanel();
        portfolioLabel = new javax.swing.JLabel();
        portfolioStatisticsLabel = new javax.swing.JLabel();
        portfolioInvestmentsLabel = new javax.swing.JLabel();
        portfolioInvestmentsInfoLabel = new javax.swing.JLabel();
        portfolioInvestmentsScrollPane = new javax.swing.JScrollPane();
        portfolioInvestmentsList = new javax.swing.JList<>();
        portfolioStatsPanel = new javax.swing.JPanel();
        portfolioTotalAmountInvestedLabel = new javax.swing.JLabel();
        portfolioTotalAmountInvestedVariable = new javax.swing.JLabel();
        portfolioTotalProfitLossLabel = new javax.swing.JLabel();
        portfolioTotalProfitLossVariable = new javax.swing.JLabel();
        portfolioTotalROILabel = new javax.swing.JLabel();
        portfolioTotalROIVariable = new javax.swing.JLabel();
        portfolioTotalValueLabel = new javax.swing.JLabel();
        portfolioTotalValueVariable = new javax.swing.JLabel();
        portfolioInvestInfoRightPanel = new javax.swing.JPanel();
        portfolioInfoTitle = new javax.swing.JLabel();
        portfolioInvestmentStatsLabel = new javax.swing.JLabel();
        portfolioInvestmentCostPerShareGraph = new javax.swing.JLabel();
        portfolioInvestmentStatsPanel = new javax.swing.JPanel();
        pCurrentCPSLabel = new javax.swing.JLabel();
        pPurchaseCPSLabel = new javax.swing.JLabel();
        pNumOfSharesLabel = new javax.swing.JLabel();
        pAmountInvestedLabel = new javax.swing.JLabel();
        pProfitLossLabel = new javax.swing.JLabel();
        pROILabel = new javax.swing.JLabel();
        pTotalValueLabel = new javax.swing.JLabel();
        pCurrentCPSVariable = new javax.swing.JLabel();
        pPurchaseCPSVariable = new javax.swing.JLabel();
        pNumOfSharesVariable = new javax.swing.JLabel();
        pAmountInvestedVariable = new javax.swing.JLabel();
        pProfitLossVariable = new javax.swing.JLabel();
        pROIVariable = new javax.swing.JLabel();
        pTotalValueVariable = new javax.swing.JLabel();
        portfolioCPSgraphPanel = new javax.swing.JPanel();
        pInvestInfoBackButton = new javax.swing.JButton();
        pInvestInfoSellSharesButton = new javax.swing.JButton();
        portfolioSharesSoldRightPanel = new javax.swing.JPanel();
        portfolioSharesSoldTitle = new javax.swing.JLabel();
        pssInvestmentStatistics = new javax.swing.JLabel();
        pssInvestmentStatsPanel = new javax.swing.JPanel();
        pssCurrentCPSLabel = new javax.swing.JLabel();
        pssPurchaseCPSLabel = new javax.swing.JLabel();
        pssNumOfSharesLabel = new javax.swing.JLabel();
        pssAmountInvestedLabel = new javax.swing.JLabel();
        pssProfitLossLabel = new javax.swing.JLabel();
        pssROILabel = new javax.swing.JLabel();
        pssTotalValueLabel = new javax.swing.JLabel();
        pssCurrentCPSVariable = new javax.swing.JLabel();
        pssPurchaseCPSVariable = new javax.swing.JLabel();
        pssNumOfSharesVariable = new javax.swing.JLabel();
        pssAmountInvestedVariable = new javax.swing.JLabel();
        pssProfitLossVariable = new javax.swing.JLabel();
        pssROIVariable = new javax.swing.JLabel();
        pssTotalValueVariable = new javax.swing.JLabel();
        pSharesSoldBackButton = new javax.swing.JButton();
        pssSharesSoldPanel = new javax.swing.JPanel();
        pssInvestIcon = new javax.swing.JLabel();
        bssSharesSoldLabel = new javax.swing.JLabel();
        investRightPanel = new javax.swing.JPanel();
        investLabel = new javax.swing.JLabel();
        investInfoLabel = new javax.swing.JLabel();
        lowRiskInvestmentsLabel = new javax.swing.JLabel();
        portfolioStatisticsLabel3 = new javax.swing.JLabel();
        investScrollPane1 = new javax.swing.JScrollPane();
        lowRiskInvestmentsList = new javax.swing.JList<>();
        investScrollPane2 = new javax.swing.JScrollPane();
        startupInvestmentsList = new javax.swing.JList<>();
        investInfoRightPanel = new javax.swing.JPanel();
        investInfoTitleLabel = new javax.swing.JLabel();
        investmentTabbedPane = new javax.swing.JTabbedPane();
        InvestInfoCPSGraphTab = new javax.swing.JPanel();
        investmentInfoLabel = new javax.swing.JLabel();
        investInfoDescScrollPane = new javax.swing.JScrollPane();
        investInfoDesc = new javax.swing.JTextArea();
        investCPSGraphPanel = new javax.swing.JPanel();
        portfolioStatisticsLabel5 = new javax.swing.JLabel();
        investmentTooltipLabel = new javax.swing.JLabel();
        cpsGraphScrollPane = new javax.swing.JScrollPane();
        investCPSGraphPanelTab = new javax.swing.JPanel();
        investInfoBackButton = new javax.swing.JButton();
        investInfoBuySharesButton = new javax.swing.JButton();
        investBuySharesRightPanel = new javax.swing.JPanel();
        buySharesTitleLabel = new javax.swing.JLabel();
        BuySharesCPSGraphLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        buySharesCPSGraph = new javax.swing.JPanel();
        buySharesBackButton = new javax.swing.JButton();
        bsConfirmSharesPurchaseButton = new javax.swing.JButton();
        bsValueRadioButton = new javax.swing.JRadioButton();
        bsValueDollarSign = new javax.swing.JLabel();
        bsNumSharesRadioButton = new javax.swing.JRadioButton();
        bsNumSharesSpinner = new javax.swing.JSpinner();
        bsValueTextField = new javax.swing.JFormattedTextField();
        bsSimulationInfo = new javax.swing.JLabel();
        selectedCPStableScrollPane = new javax.swing.JScrollPane();
        selectedCPStable = new javax.swing.JTable();
        investBuySharesConfirmationRightPanel = new javax.swing.JPanel();
        buySharesConfirmationTitle = new javax.swing.JLabel();
        bscPurchaseConfirmedPanel = new javax.swing.JPanel();
        bscInvestIcon = new javax.swing.JLabel();
        bscPurchaseConfirmedLabel = new javax.swing.JLabel();
        buySharesConfirmBackButton = new javax.swing.JButton();
        bscInvestmentStatsLabel = new javax.swing.JLabel();
        buySharesStatsPanel = new javax.swing.JPanel();
        bscPurchaseCPSLabel = new javax.swing.JLabel();
        bscNumSharesLabel = new javax.swing.JLabel();
        bscAmountInvestedLabel = new javax.swing.JLabel();
        bscPurchaseCPSVariable = new javax.swing.JLabel();
        bscNumSharesVariable = new javax.swing.JLabel();
        bscAmountInvestedVariable = new javax.swing.JLabel();
        walletRightPanel = new javax.swing.JPanel();
        walletLabel = new javax.swing.JLabel();
        walletBalancePanel = new javax.swing.JPanel();
        walletBalanceAmount = new javax.swing.JLabel();
        walletBalanceLabel = new javax.swing.JLabel();
        withdrawAmountLabel = new javax.swing.JLabel();
        walletWithdrawButton = new javax.swing.JButton();
        withdrawDollarSign = new javax.swing.JLabel();
        walletTopUpButton = new javax.swing.JButton();
        topUpDollarSign = new javax.swing.JLabel();
        topUpAmountLabel = new javax.swing.JLabel();
        walletWithdrawTextField = new javax.swing.JFormattedTextField();
        walletTopUpTextField = new javax.swing.JFormattedTextField();
        walletWithdrawEntireBalanceCheckbox = new javax.swing.JCheckBox();
        accountInfoRightPanel = new javax.swing.JPanel();
        accountInfoLabel = new javax.swing.JLabel();
        accountInfoPanel = new javax.swing.JPanel();
        AccInfoUsernameVariable = new javax.swing.JLabel();
        AccInfoFullNameVariable = new javax.swing.JLabel();
        AccInfoBankVariable = new javax.swing.JLabel();
        AccInfoDOBVariable = new javax.swing.JLabel();
        AccInfoWalletBalanceVariable = new javax.swing.JLabel();
        AccInfoUsernameLabel = new javax.swing.JLabel();
        AccInfoFullNameLabel = new javax.swing.JLabel();
        AccInfoBankLabel = new javax.swing.JLabel();
        AccInfoDOBLabel = new javax.swing.JLabel();
        AccInfoWalletBalanceLabel = new javax.swing.JLabel();

        warningDialogue.setTitle("Warning");
        warningDialogue.setBackground(new java.awt.Color(255, 255, 255));
        warningDialogue.setLocation(new java.awt.Point(0, 0));
        warningDialogue.setResizable(false);
        warningDialogue.setSize(new java.awt.Dimension(500, 450));
        warningDialogue.setType(java.awt.Window.Type.POPUP);
        warningDialogue.setPreferredSize(new Dimension(590,280));
        warningDialogue.setLocationRelativeTo(this);
        warningDialogue.setModalityType(ModalityType.APPLICATION_MODAL);
        warningDialogue.pack();

        warningDialoguePanel.setBackground(new java.awt.Color(255, 255, 255));
        warningDialoguePanel.setName("Warning"); // NOI18N
        warningDialoguePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        warningDialogueTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        warningDialogueTitle.setForeground(new java.awt.Color(88, 88, 88));
        warningDialogueTitle.setText("Dialogue Label");
        warningDialoguePanel.add(warningDialogueTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 6, 430, 66));

        warningDialogueIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warningIcon.png"))); // NOI18N
        warningDialoguePanel.add(warningDialogueIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 32, -1, -1));

        warningDialogueDesc.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        warningDialogueDesc.setForeground(new java.awt.Color(88, 88, 88));
        warningDialogueDesc.setText("Dialogue text");
        warningDialogueDesc.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        warningDialoguePanel.add(warningDialogueDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 78, 430, 88));

        warningOkButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        warningOkButton.setText("Ok");
        warningOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warningOkButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout warningDialogueButtonPanelLayout = new org.jdesktop.layout.GroupLayout(warningDialogueButtonPanel);
        warningDialogueButtonPanel.setLayout(warningDialogueButtonPanelLayout);
        warningDialogueButtonPanelLayout.setHorizontalGroup(
            warningDialogueButtonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(warningDialogueButtonPanelLayout.createSequentialGroup()
                .add(212, 212, 212)
                .add(warningOkButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        warningDialogueButtonPanelLayout.setVerticalGroup(
            warningDialogueButtonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(warningDialogueButtonPanelLayout.createSequentialGroup()
                .add(16, 16, 16)
                .add(warningOkButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        warningDialoguePanel.add(warningDialogueButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 172, 580, -1));

        org.jdesktop.layout.GroupLayout warningDialogueLayout = new org.jdesktop.layout.GroupLayout(warningDialogue.getContentPane());
        warningDialogue.getContentPane().setLayout(warningDialogueLayout);
        warningDialogueLayout.setHorizontalGroup(
            warningDialogueLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(warningDialoguePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        warningDialogueLayout.setVerticalGroup(
            warningDialogueLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(warningDialoguePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        confirmationDialogue.setTitle("Confirmation");
        confirmationDialogue.setBackground(new java.awt.Color(255, 255, 255));
        confirmationDialogue.setLocation(new java.awt.Point(0, 0));
        confirmationDialogue.setResizable(false);
        confirmationDialogue.setSize(new java.awt.Dimension(500, 450));
        confirmationDialogue.setType(java.awt.Window.Type.POPUP);
        confirmationDialogue.setPreferredSize(new Dimension(590,280));
        confirmationDialogue.setLocationRelativeTo(this);
        confirmationDialogue.setModalityType(ModalityType.APPLICATION_MODAL);
        confirmationDialogue.pack();

        confirmationDialoguePanel.setBackground(new java.awt.Color(255, 255, 255));
        confirmationDialoguePanel.setName("Warning"); // NOI18N
        confirmationDialoguePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        confirmationDialogueTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        confirmationDialogueTitle.setForeground(new java.awt.Color(88, 88, 88));
        confirmationDialogueTitle.setText("Dialogue Label");
        confirmationDialoguePanel.add(confirmationDialogueTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 6, 430, 66));

        confirmationDialogueIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/infoIcon.png"))); // NOI18N
        confirmationDialoguePanel.add(confirmationDialogueIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 32, -1, -1));

        confirmationDialogueDesc.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        confirmationDialogueDesc.setForeground(new java.awt.Color(88, 88, 88));
        confirmationDialogueDesc.setText("Dialogue text");
        confirmationDialogueDesc.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        confirmationDialoguePanel.add(confirmationDialogueDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 78, 430, 88));

        confirmationOkButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        confirmationOkButton.setText("Ok");
        confirmationOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmationOkButtonActionPerformed(evt);
            }
        });

        confirmationCancelButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        confirmationCancelButton.setText("Cancel");
        confirmationCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmationCancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout confirmationDialogueButtonPanelLayout = new org.jdesktop.layout.GroupLayout(confirmationDialogueButtonPanel);
        confirmationDialogueButtonPanel.setLayout(confirmationDialogueButtonPanelLayout);
        confirmationDialogueButtonPanelLayout.setHorizontalGroup(
            confirmationDialogueButtonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, confirmationDialogueButtonPanelLayout.createSequentialGroup()
                .add(79, 79, 79)
                .add(confirmationCancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 112, Short.MAX_VALUE)
                .add(confirmationOkButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(79, 79, 79))
        );
        confirmationDialogueButtonPanelLayout.setVerticalGroup(
            confirmationDialogueButtonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(confirmationDialogueButtonPanelLayout.createSequentialGroup()
                .add(18, 18, 18)
                .add(confirmationDialogueButtonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(confirmationOkButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(confirmationCancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        confirmationDialoguePanel.add(confirmationDialogueButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 172, 580, -1));

        org.jdesktop.layout.GroupLayout confirmationDialogueLayout = new org.jdesktop.layout.GroupLayout(confirmationDialogue.getContentPane());
        confirmationDialogue.getContentPane().setLayout(confirmationDialogueLayout);
        confirmationDialogueLayout.setHorizontalGroup(
            confirmationDialogueLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(confirmationDialoguePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        confirmationDialogueLayout.setVerticalGroup(
            confirmationDialogueLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(confirmationDialoguePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        confirmationDialogue.getAccessibleContext().setAccessibleName("");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shareversity");
        setBackground(new java.awt.Color(253, 234, 239));
        setLocation(new Point((SCREENWIDTH-WINDOWWIDTH)/2, (SCREENHEIGHT-WINDOWHEIGHT)/2));
        setPreferredSize(new Dimension(WINDOWWIDTH, WINDOWHEIGHT));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        loginRegisterPanel.setLayout(new java.awt.GridLayout(1, 0));

        loginRegisterLeftPanel.setBackground(new java.awt.Color(253, 234, 239));
        loginRegisterLeftPanel.setForeground(new java.awt.Color(253, 234, 239));
        loginRegisterLeftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N
        loginRegisterLeftPanel.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -40, 500, 764));

        loginRegisterPanel.add(loginRegisterLeftPanel);

        loginRegisterRightPanels.setLayout(new java.awt.CardLayout());
        updateDayComboBox();

        loginRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        loginRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        loginLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(253, 234, 239));
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLabel.setText("Log in");
        loginLabel.setToolTipText("");
        loginLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        loginPasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        loginPasswordLabel.setForeground(new java.awt.Color(253, 234, 239));
        loginPasswordLabel.setText("Password");
        loginPasswordLabel.setToolTipText("");

        loginUsernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        loginUsernameLabel.setForeground(new java.awt.Color(253, 234, 239));
        loginUsernameLabel.setText("Username");
        loginUsernameLabel.setToolTipText("");

        loginUsernameTextField.setBackground(new java.awt.Color(255, 255, 255));
        loginUsernameTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        loginUsernameTextField.setForeground(new java.awt.Color(51, 51, 51));
        loginUsernameTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        loginUsernameTextField.setOpaque(true);
        loginUsernameTextField.setScrollOffset(5);
        loginUsernameTextField.setSelectionColor(new java.awt.Color(100, 72, 145));
        loginUsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginUsernameTextFieldActionPerformed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(100, 72, 145));
        loginButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.setBorder(null);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerHereButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        registerHereButton.setForeground(new java.awt.Color(253, 234, 239));
        registerHereButton.setText("<HTML><U>Register here</U></HTML>");
        registerHereButton.setToolTipText("");
        registerHereButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerHereButtonMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                registerHereButtonMouseReleased(evt);
            }
        });

        registerMsgLabel.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        registerMsgLabel.setForeground(new java.awt.Color(253, 234, 239));
        registerMsgLabel.setText("Don't have an account? ");
        registerMsgLabel.setToolTipText("");

        showHidePasswordPanel.setBackground(new java.awt.Color(255, 255, 255));
        showHidePasswordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginPasswordTextField.setBackground(new java.awt.Color(255, 255, 255));
        loginPasswordTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        loginPasswordTextField.setForeground(new java.awt.Color(51, 51, 51));
        loginPasswordTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        loginPasswordTextField.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        loginPasswordTextField.setSelectionColor(new java.awt.Color(100, 72, 145));
        loginPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPasswordTextFieldActionPerformed(evt);
            }
        });
        showHidePasswordPanel.add(loginPasswordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 50));

        hidePasswordCheckBox.setSelected(true);
        hidePasswordCheckBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/hidePwdIcon.png"))); // NOI18N
        hidePasswordCheckBox.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        hidePasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hidePasswordCheckBoxActionPerformed(evt);
            }
        });
        showHidePasswordPanel.add(hidePasswordCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 50, -1));

        org.jdesktop.layout.GroupLayout loginRightPanelLayout = new org.jdesktop.layout.GroupLayout(loginRightPanel);
        loginRightPanel.setLayout(loginRightPanelLayout);
        loginRightPanelLayout.setHorizontalGroup(
            loginRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(loginRightPanelLayout.createSequentialGroup()
                .add(58, 58, 58)
                .add(loginRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(loginPasswordLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(loginUsernameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(loginRightPanelLayout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(loginRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(loginRightPanelLayout.createSequentialGroup()
                                .add(registerMsgLabel)
                                .add(3, 3, 3)
                                .add(registerHereButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(loginButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(loginLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(showHidePasswordPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .add(loginUsernameTextField))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        loginRightPanelLayout.setVerticalGroup(
            loginRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(loginRightPanelLayout.createSequentialGroup()
                .add(179, 179, 179)
                .add(loginLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(loginUsernameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(loginUsernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(loginPasswordLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(showHidePasswordPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(63, 63, 63)
                .add(loginButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(loginRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(registerHereButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(registerMsgLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(815, Short.MAX_VALUE))
        );

        loginRegisterRightPanels.add(loginRightPanel, "card2");

        registerRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        registerRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        newAccountLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        newAccountLabel.setForeground(new java.awt.Color(253, 234, 239));
        newAccountLabel.setText("New Account");
        newAccountLabel.setToolTipText("");
        newAccountLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        registerButton.setBackground(new java.awt.Color(100, 72, 145));
        registerButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("Register");
        registerButton.setBorder(null);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        loginHereButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        loginHereButton.setForeground(new java.awt.Color(253, 234, 239));
        loginHereButton.setText("<HTML><U>Login here</U></HTML>");
        loginHereButton.setToolTipText("");
        loginHereButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginHereButtonMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loginHereButtonMouseReleased(evt);
            }
        });

        loginMsgLabel.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        loginMsgLabel.setForeground(new java.awt.Color(253, 234, 239));
        loginMsgLabel.setText("Already have an account?");
        loginMsgLabel.setToolTipText("");

        registerUsernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        registerUsernameLabel.setForeground(new java.awt.Color(253, 234, 239));
        registerUsernameLabel.setText("Username");
        registerUsernameLabel.setToolTipText("");

        registerUsernameTextField.setBackground(new java.awt.Color(255, 255, 255));
        registerUsernameTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerUsernameTextField.setForeground(new java.awt.Color(51, 51, 51));
        registerUsernameTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        registerUsernameTextField.setOpaque(true);
        registerUsernameTextField.setScrollOffset(5);
        registerUsernameTextField.setSelectionColor(new java.awt.Color(100, 72, 145));
        registerUsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerUsernameTextFieldActionPerformed(evt);
            }
        });

        registerPasswordTextField.setBackground(new java.awt.Color(255, 255, 255));
        registerPasswordTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerPasswordTextField.setForeground(new java.awt.Color(51, 51, 51));
        registerPasswordTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        registerPasswordTextField.setOpaque(true);
        registerPasswordTextField.setScrollOffset(5);
        registerPasswordTextField.setSelectionColor(new java.awt.Color(100, 72, 145));
        registerPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerPasswordTextFieldActionPerformed(evt);
            }
        });

        registerPasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        registerPasswordLabel.setForeground(new java.awt.Color(253, 234, 239));
        registerPasswordLabel.setText("Password");
        registerPasswordLabel.setToolTipText("");

        registerFullNameTextField.setBackground(new java.awt.Color(255, 255, 255));
        registerFullNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerFullNameTextField.setForeground(new java.awt.Color(51, 51, 51));
        registerFullNameTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        registerFullNameTextField.setOpaque(true);
        registerFullNameTextField.setScrollOffset(5);
        registerFullNameTextField.setSelectionColor(new java.awt.Color(100, 72, 145));
        registerFullNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerFullNameTextFieldActionPerformed(evt);
            }
        });
        registerFullNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                registerFullNameTextFieldKeyTyped(evt);
            }
        });

        registerFullNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        registerFullNameLabel.setForeground(new java.awt.Color(253, 234, 239));
        registerFullNameLabel.setText("Full Name");
        registerFullNameLabel.setToolTipText("");

        registerBankAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        registerBankAccountLabel.setForeground(new java.awt.Color(253, 234, 239));
        registerBankAccountLabel.setText("Bank Account Number");
        registerBankAccountLabel.setToolTipText("");

        registerDayComboBox.setBackground(new java.awt.Color(255, 255, 255));
        registerDayComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerDayComboBox.setForeground(new java.awt.Color(51, 51, 51));
        registerDayComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerDayComboBoxMouseClicked(evt);
            }
        });
        registerDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerDayComboBoxActionPerformed(evt);
            }
        });

        registerYearComboBox.setBackground(new java.awt.Color(255, 255, 255));
        registerYearComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerYearComboBox.setForeground(new java.awt.Color(51, 51, 51));
        registerYearComboBox.setModel(this.generateYearArray());
        registerYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerYearComboBoxActionPerformed(evt);
            }
        });

        registerMonthComboBox.setBackground(new java.awt.Color(255, 255, 255));
        registerMonthComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registerMonthComboBox.setForeground(new java.awt.Color(51, 51, 51));
        registerMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        registerMonthComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMonthComboBoxMouseClicked(evt);
            }
        });
        registerMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMonthComboBoxActionPerformed(evt);
            }
        });

        RegisterDateOfBirthLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        RegisterDateOfBirthLabel.setForeground(new java.awt.Color(253, 234, 239));
        RegisterDateOfBirthLabel.setText("Date of birth");
        RegisterDateOfBirthLabel.setToolTipText("");

        registerBankAccountNumber.setBackground(new java.awt.Color(255, 255, 255));
        registerBankAccountNumber.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        registerBankAccountNumber.setForeground(new java.awt.Color(51, 51, 51));
        try {
            registerBankAccountNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-####-#######-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        registerBankAccountNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        org.jdesktop.layout.GroupLayout registerRightPanelLayout = new org.jdesktop.layout.GroupLayout(registerRightPanel);
        registerRightPanel.setLayout(registerRightPanelLayout);
        registerRightPanelLayout.setHorizontalGroup(
            registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(registerRightPanelLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, registerRightPanelLayout.createSequentialGroup()
                        .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(registerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(registerRightPanelLayout.createSequentialGroup()
                                .add(loginMsgLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(loginHereButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(83, 83, 83))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, registerRightPanelLayout.createSequentialGroup()
                        .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, registerRightPanelLayout.createSequentialGroup()
                                .add(newAccountLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(61, 61, 61))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(registerFullNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(registerFullNameTextField)
                                .add(registerPasswordLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(registerPasswordTextField)
                                .add(registerUsernameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(registerUsernameTextField)
                                .add(registerRightPanelLayout.createSequentialGroup()
                                    .add(registerDayComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(registerMonthComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(registerYearComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(RegisterDateOfBirthLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(registerBankAccountLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 232, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(registerBankAccountNumber)))
                        .add(51, 51, 51))))
        );
        registerRightPanelLayout.setVerticalGroup(
            registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(registerRightPanelLayout.createSequentialGroup()
                .addContainerGap(797, Short.MAX_VALUE)
                .add(newAccountLabel)
                .add(5, 5, 5)
                .add(registerUsernameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerUsernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerPasswordLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerPasswordTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerFullNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerFullNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerBankAccountLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(4, 4, 4)
                .add(registerBankAccountNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(RegisterDateOfBirthLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, registerMonthComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(registerDayComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(registerYearComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(registerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(registerRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(loginHereButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(loginMsgLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(49, 49, 49))
        );

        loginRegisterRightPanels.add(registerRightPanel, "card3");

        loginRegisterPanel.add(loginRegisterRightPanels);

        getContentPane().add(loginRegisterPanel, "card2");

        menuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuSplitPanel.setDividerSize(0);

        menuLeftPanel.setBackground(new java.awt.Color(253, 234, 239));
        menuLeftPanel.setForeground(new java.awt.Color(253, 234, 239));
        menuLeftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo2.setIcon(resizeImage(logo2, "/resources/logo.png", 262, 169));
        menuLeftPanel.add(logo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 280, 189));

        accountInfoButton.setBackground(new java.awt.Color(203, 75, 93));
        accountInfoButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        accountInfoButton.setForeground(new java.awt.Color(255, 255, 255));
        accountInfoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/accountInfoIcon.png"))); // NOI18N
        accountInfoButton.setText("  Account Information");
        accountInfoButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        accountInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountInfoButtonActionPerformed(evt);
            }
        });
        menuLeftPanel.add(accountInfoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 271, 45));

        logoutButton.setBackground(new java.awt.Color(54, 54, 54));
        logoutButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logoutIcon.png"))); // NOI18N
        logoutButton.setText("     Log out");
        logoutButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        menuLeftPanel.add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 640, 210, 45));

        walletButton.setBackground(new java.awt.Color(203, 75, 93));
        walletButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        walletButton.setForeground(new java.awt.Color(255, 255, 255));
        walletButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/walletIcon.png"))); // NOI18N
        walletButton.setText("    Wallet");
        walletButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        walletButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletButtonActionPerformed(evt);
            }
        });
        menuLeftPanel.add(walletButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 271, 45));

        portfolioButton.setBackground(new java.awt.Color(88, 88, 88));
        portfolioButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        portfolioButton.setForeground(new java.awt.Color(255, 255, 255));
        portfolioButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/portfolioIcon.png"))); // NOI18N
        portfolioButton.setText("     Portfolio");
        portfolioButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        portfolioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portfolioButtonActionPerformed(evt);
            }
        });
        menuLeftPanel.add(portfolioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 271, 45));

        investButton.setBackground(new java.awt.Color(203, 75, 93));
        investButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        investButton.setForeground(new java.awt.Color(255, 255, 255));
        investButton.setIcon(resizeImage(logo2, "/resources/investIcon.png", 32,32));
        investButton.setText("     Invest");
        investButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        investButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investButtonActionPerformed(evt);
            }
        });
        menuLeftPanel.add(investButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 271, 45));

        menuWalletBalance.setBackground(new java.awt.Color(143, 143, 143));
        menuWalletBalance.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        menuWalletBalance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuWalletBalanceTitle.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        menuWalletBalanceTitle.setForeground(new java.awt.Color(255, 255, 255));
        menuWalletBalanceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuWalletBalanceTitle.setText("Wallet Balance:");
        menuWalletBalance.add(menuWalletBalanceTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 210, 24));

        menuWalletBalanceValue.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        menuWalletBalanceValue.setForeground(new java.awt.Color(255, 255, 255));
        menuWalletBalanceValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuWalletBalanceValue.setText("$1,000.00");
        menuWalletBalance.add(menuWalletBalanceValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 30, 210, -1));

        menuLeftPanel.add(menuWalletBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 250, 70));

        menuSplitPanel.setLeftComponent(menuLeftPanel);

        menuRightPanels.setLayout(new java.awt.CardLayout());

        portfolioRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        portfolioRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        portfolioLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        portfolioLabel.setForeground(new java.awt.Color(253, 234, 239));
        portfolioLabel.setText("Portfolio");
        portfolioLabel.setToolTipText("");
        portfolioLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        portfolioStatisticsLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        portfolioStatisticsLabel.setForeground(new java.awt.Color(253, 234, 239));
        portfolioStatisticsLabel.setText("Portfolio Statistics");
        portfolioStatisticsLabel.setToolTipText("");

        portfolioInvestmentsLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        portfolioInvestmentsLabel.setForeground(new java.awt.Color(253, 234, 239));
        portfolioInvestmentsLabel.setText("Portfolio Investments");
        portfolioInvestmentsLabel.setToolTipText("");

        portfolioInvestmentsInfoLabel.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        portfolioInvestmentsInfoLabel.setForeground(new java.awt.Color(253, 234, 239));
        portfolioInvestmentsInfoLabel.setText("<HTML><b>Click an investment to view more information and for the option sell shares");
        portfolioInvestmentsInfoLabel.setToolTipText("");

        portfolioInvestmentsList.setBackground(new java.awt.Color(255, 255, 255));
        portfolioInvestmentsList.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        portfolioInvestmentsList.setForeground(new java.awt.Color(88, 88, 88));
        portfolioInvestmentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        portfolioInvestmentsList.setSelectionBackground(new java.awt.Color(153, 107, 229));
        portfolioInvestmentsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        portfolioInvestmentsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                portfolioInvestmentsListMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                portfolioInvestmentsListMousePressed(evt);
            }
        });
        portfolioInvestmentsScrollPane.setViewportView(portfolioInvestmentsList);

        portfolioStatsPanel.setBackground(new java.awt.Color(255, 255, 255));

        portfolioTotalAmountInvestedLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalAmountInvestedLabel.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalAmountInvestedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        portfolioTotalAmountInvestedLabel.setText("Total amount invested:");

        portfolioTotalAmountInvestedVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalAmountInvestedVariable.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalAmountInvestedVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portfolioTotalAmountInvestedVariable.setText("$90.0");

        portfolioTotalProfitLossLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalProfitLossLabel.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalProfitLossLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        portfolioTotalProfitLossLabel.setText("Total profit/loss:");

        portfolioTotalProfitLossVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalProfitLossVariable.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalProfitLossVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portfolioTotalProfitLossVariable.setText("$-1.40");

        portfolioTotalROILabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalROILabel.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalROILabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        portfolioTotalROILabel.setText("Total return on investment (ROI)");

        portfolioTotalROIVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        portfolioTotalROIVariable.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalROIVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portfolioTotalROIVariable.setText("-0.0155%");

        portfolioTotalValueLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        portfolioTotalValueLabel.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        portfolioTotalValueLabel.setText("Total value:");

        portfolioTotalValueVariable.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        portfolioTotalValueVariable.setForeground(new java.awt.Color(88, 88, 88));
        portfolioTotalValueVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portfolioTotalValueVariable.setText("$88.60");

        org.jdesktop.layout.GroupLayout portfolioStatsPanelLayout = new org.jdesktop.layout.GroupLayout(portfolioStatsPanel);
        portfolioStatsPanel.setLayout(portfolioStatsPanelLayout);
        portfolioStatsPanelLayout.setHorizontalGroup(
            portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioStatsPanelLayout.createSequentialGroup()
                .add(25, 25, 25)
                .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portfolioStatsPanelLayout.createSequentialGroup()
                        .add(portfolioTotalValueLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(portfolioTotalValueVariable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(portfolioStatsPanelLayout.createSequentialGroup()
                            .add(portfolioTotalROILabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(portfolioTotalROIVariable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(portfolioStatsPanelLayout.createSequentialGroup()
                            .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(portfolioTotalProfitLossLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(portfolioTotalAmountInvestedLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(portfolioTotalAmountInvestedVariable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(portfolioTotalProfitLossVariable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        portfolioStatsPanelLayout.setVerticalGroup(
            portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioStatsPanelLayout.createSequentialGroup()
                .add(31, 31, 31)
                .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(portfolioTotalAmountInvestedVariable)
                    .add(portfolioTotalAmountInvestedLabel))
                .add(30, 30, 30)
                .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(portfolioTotalProfitLossLabel)
                    .add(portfolioTotalProfitLossVariable))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(portfolioTotalROILabel)
                    .add(portfolioTotalROIVariable))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(portfolioTotalValueLabel)
                    .add(portfolioTotalValueVariable))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout portfolioRightPanelLayout = new org.jdesktop.layout.GroupLayout(portfolioRightPanel);
        portfolioRightPanel.setLayout(portfolioRightPanelLayout);
        portfolioRightPanelLayout.setHorizontalGroup(
            portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioRightPanelLayout.createSequentialGroup()
                .add(portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portfolioRightPanelLayout.createSequentialGroup()
                        .add(268, 268, 268)
                        .add(portfolioLabel))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, portfolioRightPanelLayout.createSequentialGroup()
                        .add(61, 61, 61)
                        .add(portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(portfolioInvestmentsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                            .add(portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(portfolioInvestmentsLabel)
                                .add(portfolioStatisticsLabel)
                                .add(portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(portfolioInvestmentsInfoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                                    .add(portfolioStatsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .add(72, 72, 72)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        portfolioRightPanelLayout.setVerticalGroup(
            portfolioRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioRightPanelLayout.createSequentialGroup()
                .add(54, 54, 54)
                .add(portfolioLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioInvestmentsLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioInvestmentsInfoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioInvestmentsScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 186, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(portfolioStatisticsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(868, Short.MAX_VALUE))
        );

        menuRightPanels.add(portfolioRightPanel, "card2");

        portfolioInvestInfoRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        portfolioInvestInfoRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        portfolioInfoTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        portfolioInfoTitle.setForeground(new java.awt.Color(253, 234, 239));
        portfolioInfoTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        portfolioInfoTitle.setText("Portfolio: Delicious Bites ");
        portfolioInfoTitle.setToolTipText("");
        portfolioInfoTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        portfolioInvestmentStatsLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        portfolioInvestmentStatsLabel.setForeground(new java.awt.Color(253, 234, 239));
        portfolioInvestmentStatsLabel.setText("Investment Statistics");
        portfolioInvestmentStatsLabel.setToolTipText("");

        portfolioInvestmentCostPerShareGraph.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        portfolioInvestmentCostPerShareGraph.setForeground(new java.awt.Color(253, 234, 239));
        portfolioInvestmentCostPerShareGraph.setText("Cost Per Share History Graph");
        portfolioInvestmentCostPerShareGraph.setToolTipText("");

        portfolioInvestmentStatsPanel.setBackground(new java.awt.Color(255, 255, 255));
        portfolioInvestmentStatsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pCurrentCPSLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pCurrentCPSLabel.setForeground(new java.awt.Color(88, 88, 88));
        pCurrentCPSLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pCurrentCPSLabel.setText("Purchase cost per share:");
        portfolioInvestmentStatsPanel.add(pCurrentCPSLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 264, -1));

        pPurchaseCPSLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pPurchaseCPSLabel.setForeground(new java.awt.Color(88, 88, 88));
        pPurchaseCPSLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pPurchaseCPSLabel.setText("Current cost per share:");
        portfolioInvestmentStatsPanel.add(pPurchaseCPSLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 264, -1));

        pNumOfSharesLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pNumOfSharesLabel.setForeground(new java.awt.Color(88, 88, 88));
        pNumOfSharesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pNumOfSharesLabel.setText("Number of shares:");
        portfolioInvestmentStatsPanel.add(pNumOfSharesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 264, -1));

        pAmountInvestedLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pAmountInvestedLabel.setForeground(new java.awt.Color(88, 88, 88));
        pAmountInvestedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pAmountInvestedLabel.setText("Amount invested:");
        portfolioInvestmentStatsPanel.add(pAmountInvestedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 264, -1));

        pProfitLossLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pProfitLossLabel.setForeground(new java.awt.Color(88, 88, 88));
        pProfitLossLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pProfitLossLabel.setText("Profit/Loss:");
        portfolioInvestmentStatsPanel.add(pProfitLossLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 264, -1));

        pROILabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pROILabel.setForeground(new java.awt.Color(88, 88, 88));
        pROILabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pROILabel.setText("Return on Investment:");
        portfolioInvestmentStatsPanel.add(pROILabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 264, -1));

        pTotalValueLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        pTotalValueLabel.setForeground(new java.awt.Color(88, 88, 88));
        pTotalValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pTotalValueLabel.setText("Value: ");
        portfolioInvestmentStatsPanel.add(pTotalValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 126, -1));

        pCurrentCPSVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pCurrentCPSVariable.setForeground(new java.awt.Color(88, 88, 88));
        pCurrentCPSVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pCurrentCPSVariable.setText("05-09-2023: $21.08");
        portfolioInvestmentStatsPanel.add(pCurrentCPSVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 264, -1));

        pPurchaseCPSVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pPurchaseCPSVariable.setForeground(new java.awt.Color(88, 88, 88));
        pPurchaseCPSVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pPurchaseCPSVariable.setText("27-09-2023: $20.75");
        portfolioInvestmentStatsPanel.add(pPurchaseCPSVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 264, -1));

        pNumOfSharesVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pNumOfSharesVariable.setForeground(new java.awt.Color(88, 88, 88));
        pNumOfSharesVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pNumOfSharesVariable.setText("4.27");
        portfolioInvestmentStatsPanel.add(pNumOfSharesVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 264, -1));

        pAmountInvestedVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pAmountInvestedVariable.setForeground(new java.awt.Color(88, 88, 88));
        pAmountInvestedVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pAmountInvestedVariable.setText("$90.0");
        portfolioInvestmentStatsPanel.add(pAmountInvestedVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 264, -1));

        pProfitLossVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pProfitLossVariable.setForeground(new java.awt.Color(88, 88, 88));
        pProfitLossVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pProfitLossVariable.setText("$-1.40");
        portfolioInvestmentStatsPanel.add(pProfitLossVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 264, -1));

        pROIVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pROIVariable.setForeground(new java.awt.Color(88, 88, 88));
        pROIVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pROIVariable.setText("-0.0155%");
        portfolioInvestmentStatsPanel.add(pROIVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 264, -1));

        pTotalValueVariable.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        pTotalValueVariable.setForeground(new java.awt.Color(88, 88, 88));
        pTotalValueVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pTotalValueVariable.setText(" $88.60");
        portfolioInvestmentStatsPanel.add(pTotalValueVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 126, -1));

        portfolioCPSgraphPanel.setBackground(new java.awt.Color(255, 255, 255));
        portfolioCPSgraphPanel.setLayout(new java.awt.BorderLayout());

        pInvestInfoBackButton.setBackground(new java.awt.Color(54, 54, 54));
        pInvestInfoBackButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        pInvestInfoBackButton.setForeground(new java.awt.Color(255, 255, 255));
        pInvestInfoBackButton.setText("Back");
        pInvestInfoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pInvestInfoBackButtonActionPerformed(evt);
            }
        });

        pInvestInfoSellSharesButton.setBackground(new java.awt.Color(100, 72, 145));
        pInvestInfoSellSharesButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        pInvestInfoSellSharesButton.setForeground(new java.awt.Color(255, 255, 255));
        pInvestInfoSellSharesButton.setText("Sell Shares");
        pInvestInfoSellSharesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pInvestInfoSellSharesButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout portfolioInvestInfoRightPanelLayout = new org.jdesktop.layout.GroupLayout(portfolioInvestInfoRightPanel);
        portfolioInvestInfoRightPanel.setLayout(portfolioInvestInfoRightPanelLayout);
        portfolioInvestInfoRightPanelLayout.setHorizontalGroup(
            portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                .add(66, 66, 66)
                .add(portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(portfolioInvestmentCostPerShareGraph)
                    .add(portfolioInvestmentStatsLabel)
                    .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                        .add(pInvestInfoBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pInvestInfoSellSharesButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(portfolioInfoTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 580, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(portfolioCPSgraphPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 580, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(portfolioInvestmentStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 580, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(100, 100, 100))
        );
        portfolioInvestInfoRightPanelLayout.setVerticalGroup(
            portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                .add(30, 30, 30)
                .add(portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portfolioInfoTitle)
                    .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                        .add(50, 50, 50)
                        .add(portfolioInvestmentCostPerShareGraph, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                        .add(262, 262, 262)
                        .add(portfolioInvestmentStatsLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(portfolioCPSgraphPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 270, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(portfolioInvestInfoRightPanelLayout.createSequentialGroup()
                        .add(310, 310, 310)
                        .add(portfolioInvestmentStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(42, 42, 42)
                .add(portfolioInvestInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(pInvestInfoBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pInvestInfoSellSharesButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        menuRightPanels.add(portfolioInvestInfoRightPanel, "card3");

        portfolioSharesSoldRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        portfolioSharesSoldRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        portfolioSharesSoldTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        portfolioSharesSoldTitle.setForeground(new java.awt.Color(253, 234, 239));
        portfolioSharesSoldTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        portfolioSharesSoldTitle.setText("Shares Sold: Delicious Bites ");
        portfolioSharesSoldTitle.setToolTipText("");
        portfolioSharesSoldTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        pssInvestmentStatistics.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        pssInvestmentStatistics.setForeground(new java.awt.Color(253, 234, 239));
        pssInvestmentStatistics.setText("Investment Statistics");
        pssInvestmentStatistics.setToolTipText("");

        pssInvestmentStatsPanel.setBackground(new java.awt.Color(153, 107, 229));
        pssInvestmentStatsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pssCurrentCPSLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssCurrentCPSLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssCurrentCPSLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssCurrentCPSLabel.setText("Current cost per share:");
        pssInvestmentStatsPanel.add(pssCurrentCPSLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 264, -1));

        pssPurchaseCPSLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssPurchaseCPSLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssPurchaseCPSLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssPurchaseCPSLabel.setText("Purchase cost per share:");
        pssInvestmentStatsPanel.add(pssPurchaseCPSLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 264, -1));

        pssNumOfSharesLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssNumOfSharesLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssNumOfSharesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssNumOfSharesLabel.setText("Number of shares:");
        pssInvestmentStatsPanel.add(pssNumOfSharesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 264, -1));

        pssAmountInvestedLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssAmountInvestedLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssAmountInvestedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssAmountInvestedLabel.setText("Amount invested:");
        pssInvestmentStatsPanel.add(pssAmountInvestedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 264, -1));

        pssProfitLossLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssProfitLossLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssProfitLossLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssProfitLossLabel.setText("Profit/Loss:");
        pssInvestmentStatsPanel.add(pssProfitLossLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 264, -1));

        pssROILabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssROILabel.setForeground(new java.awt.Color(255, 255, 255));
        pssROILabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssROILabel.setText("Return on Investment:");
        pssInvestmentStatsPanel.add(pssROILabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 264, -1));

        pssTotalValueLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        pssTotalValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        pssTotalValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pssTotalValueLabel.setText("Total value: ");
        pssInvestmentStatsPanel.add(pssTotalValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 126, -1));

        pssCurrentCPSVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssCurrentCPSVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssCurrentCPSVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssCurrentCPSVariable.setText("05-09-2023: $21.08");
        pssInvestmentStatsPanel.add(pssCurrentCPSVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 264, -1));

        pssPurchaseCPSVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssPurchaseCPSVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssPurchaseCPSVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssPurchaseCPSVariable.setText("27-09-2023: $20.75");
        pssInvestmentStatsPanel.add(pssPurchaseCPSVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 264, -1));

        pssNumOfSharesVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssNumOfSharesVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssNumOfSharesVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssNumOfSharesVariable.setText("4.27");
        pssInvestmentStatsPanel.add(pssNumOfSharesVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 264, -1));

        pssAmountInvestedVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssAmountInvestedVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssAmountInvestedVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssAmountInvestedVariable.setText("$90.0");
        pssInvestmentStatsPanel.add(pssAmountInvestedVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 264, -1));

        pssProfitLossVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssProfitLossVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssProfitLossVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssProfitLossVariable.setText("$-1.40");
        pssInvestmentStatsPanel.add(pssProfitLossVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 264, -1));

        pssROIVariable.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        pssROIVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssROIVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssROIVariable.setText("-0.0155%");
        pssInvestmentStatsPanel.add(pssROIVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 264, -1));

        pssTotalValueVariable.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        pssTotalValueVariable.setForeground(new java.awt.Color(255, 255, 255));
        pssTotalValueVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pssTotalValueVariable.setText(" $88.60");
        pssInvestmentStatsPanel.add(pssTotalValueVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 126, -1));

        pSharesSoldBackButton.setBackground(new java.awt.Color(54, 54, 54));
        pSharesSoldBackButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        pSharesSoldBackButton.setForeground(new java.awt.Color(255, 255, 255));
        pSharesSoldBackButton.setText("Back");
        pSharesSoldBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSharesSoldBackButtonActionPerformed(evt);
            }
        });

        pssSharesSoldPanel.setBackground(new java.awt.Color(100, 72, 145));
        pssSharesSoldPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pssInvestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/investIcon.png"))); // NOI18N
        pssSharesSoldPanel.add(pssInvestIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        bssSharesSoldLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 22)); // NOI18N
        bssSharesSoldLabel.setForeground(new java.awt.Color(255, 255, 255));
        bssSharesSoldLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bssSharesSoldLabel.setText("<HTML><center>Your shares have been sold!<br>The total value has been transferred to your wallet</HTML>");
        pssSharesSoldPanel.add(bssSharesSoldLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        org.jdesktop.layout.GroupLayout portfolioSharesSoldRightPanelLayout = new org.jdesktop.layout.GroupLayout(portfolioSharesSoldRightPanel);
        portfolioSharesSoldRightPanel.setLayout(portfolioSharesSoldRightPanelLayout);
        portfolioSharesSoldRightPanelLayout.setHorizontalGroup(
            portfolioSharesSoldRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioSharesSoldRightPanelLayout.createSequentialGroup()
                .add(portfolioSharesSoldRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(portfolioSharesSoldRightPanelLayout.createSequentialGroup()
                        .add(247, 247, 247)
                        .add(pSharesSoldBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(portfolioSharesSoldRightPanelLayout.createSequentialGroup()
                        .add(58, 58, 58)
                        .add(portfolioSharesSoldRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(pssInvestmentStatistics)
                            .add(pssInvestmentStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 588, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(portfolioSharesSoldTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 588, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pssSharesSoldPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 588, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        portfolioSharesSoldRightPanelLayout.setVerticalGroup(
            portfolioSharesSoldRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(portfolioSharesSoldRightPanelLayout.createSequentialGroup()
                .add(56, 56, 56)
                .add(portfolioSharesSoldTitle)
                .add(49, 49, 49)
                .add(pssSharesSoldPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(pssInvestmentStatistics)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pssInvestmentStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 188, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(55, 55, 55)
                .add(pSharesSoldBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuRightPanels.add(portfolioSharesSoldRightPanel, "card3");

        investRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        investRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        investLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        investLabel.setForeground(new java.awt.Color(253, 234, 239));
        investLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        investLabel.setText("Invest");
        investLabel.setToolTipText("");
        investLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        investInfoLabel.setFont(new java.awt.Font("Segoe UI Semilight", 2, 17)); // NOI18N
        investInfoLabel.setForeground(new java.awt.Color(253, 234, 239));
        investInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        investInfoLabel.setText("<HTML><b>Click an investment to view more information and for the option to buy shares");
        investInfoLabel.setToolTipText("");

        lowRiskInvestmentsLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lowRiskInvestmentsLabel.setForeground(new java.awt.Color(253, 234, 239));
        lowRiskInvestmentsLabel.setText("Low Risk Investments");
        lowRiskInvestmentsLabel.setToolTipText("");

        portfolioStatisticsLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        portfolioStatisticsLabel3.setForeground(new java.awt.Color(253, 234, 239));
        portfolioStatisticsLabel3.setText("Startup Investments (High Risk)");
        portfolioStatisticsLabel3.setToolTipText("");

        investScrollPane1.setAutoscrolls(true);

        lowRiskInvestmentsList.setBackground(new java.awt.Color(255, 255, 255));
        lowRiskInvestmentsList.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        lowRiskInvestmentsList.setForeground(new java.awt.Color(88, 88, 88));
        lowRiskInvestmentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        lowRiskInvestmentsList.setSelectionBackground(new java.awt.Color(153, 107, 229));
        lowRiskInvestmentsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        lowRiskInvestmentsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lowRiskInvestmentsListMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lowRiskInvestmentsListMouseReleased(evt);
            }
        });
        investScrollPane1.setViewportView(lowRiskInvestmentsList);

        investScrollPane2.setAutoscrolls(true);

        startupInvestmentsList.setBackground(new java.awt.Color(255, 255, 255));
        startupInvestmentsList.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        startupInvestmentsList.setForeground(new java.awt.Color(88, 88, 88));
        startupInvestmentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        startupInvestmentsList.setSelectionBackground(new java.awt.Color(153, 107, 229));
        startupInvestmentsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        startupInvestmentsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startupInvestmentsListMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startupInvestmentsListMouseReleased(evt);
            }
        });
        investScrollPane2.setViewportView(startupInvestmentsList);

        org.jdesktop.layout.GroupLayout investRightPanelLayout = new org.jdesktop.layout.GroupLayout(investRightPanel);
        investRightPanel.setLayout(investRightPanelLayout);
        investRightPanelLayout.setHorizontalGroup(
            investRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(investRightPanelLayout.createSequentialGroup()
                .add(60, 60, 60)
                .add(investRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lowRiskInvestmentsLabel)
                    .add(portfolioStatisticsLabel3)
                    .add(investScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .add(investScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .add(investLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(investInfoLabel))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        investRightPanelLayout.setVerticalGroup(
            investRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(investRightPanelLayout.createSequentialGroup()
                .add(54, 54, 54)
                .add(investLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investInfoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(lowRiskInvestmentsLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(portfolioStatisticsLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(975, Short.MAX_VALUE))
        );

        menuRightPanels.add(investRightPanel, "card3");

        investInfoRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        investInfoRightPanel.setForeground(new java.awt.Color(227, 97, 115));
        investInfoRightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        investInfoTitleLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        investInfoTitleLabel.setForeground(new java.awt.Color(253, 234, 239));
        investInfoTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        investInfoTitleLabel.setText("Investment: Delicious Bites");
        investInfoTitleLabel.setToolTipText("");
        investInfoTitleLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        investInfoRightPanel.add(investInfoTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 20, 640, -1));

        InvestInfoCPSGraphTab.setBackground(new java.awt.Color(227, 97, 115));

        investmentInfoLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        investmentInfoLabel.setForeground(new java.awt.Color(253, 234, 239));
        investmentInfoLabel.setText("Investment Info");
        investmentInfoLabel.setToolTipText("");

        investInfoDescScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        investInfoDescScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        investInfoDescScrollPane.getVerticalScrollBar().setValue(0); // Scroll to the top

        investInfoDesc.setBackground(new java.awt.Color(255, 255, 255));
        investInfoDesc.setColumns(20);
        investInfoDesc.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        investInfoDesc.setForeground(new java.awt.Color(88, 88, 88));
        investInfoDesc.setLineWrap(true);
        investInfoDesc.setRows(5);
        investInfoDesc.setText("Delicious Bites is a rapidly growing food chain that serves a variety of delectable dishes prepared with fresh, locally sourced ingredients, catering to diverse culinary preferences.\n\nCEO:\t\t Daniel Martin\nNUMBER OF EMPLOYEES:\t 350\nCATEGORIES:\t\t Food");
        investInfoDesc.setToolTipText("");
        investInfoDesc.setWrapStyleWord(true);
        investInfoDesc.setCaretPosition(0);
        investInfoDesc.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        javax.swing.text.DefaultCaret caret = (javax.swing.text.DefaultCaret) investInfoDesc.getCaret();
        caret.setUpdatePolicy(javax.swing.text.DefaultCaret.NEVER_UPDATE);
        investInfoDesc.setCaret(caret);
        investInfoDesc.setCaretPosition(0);
        investInfoDescScrollPane.setViewportView(investInfoDesc);
        investInfoDesc.setEditable(false);

        investCPSGraphPanel.setBackground(new java.awt.Color(255, 255, 255));
        investCPSGraphPanel.setLayout(new javax.swing.BoxLayout(investCPSGraphPanel, javax.swing.BoxLayout.LINE_AXIS));

        portfolioStatisticsLabel5.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        portfolioStatisticsLabel5.setForeground(new java.awt.Color(253, 234, 239));
        portfolioStatisticsLabel5.setText("Cost Per Share History Graph");
        portfolioStatisticsLabel5.setToolTipText("");

        investmentTooltipLabel.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        investmentTooltipLabel.setForeground(new java.awt.Color(253, 234, 239));
        investmentTooltipLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        investmentTooltipLabel.setText("Hover over a point in the graph to see the date and cost per share");
        investmentTooltipLabel.setToolTipText("");

        org.jdesktop.layout.GroupLayout InvestInfoCPSGraphTabLayout = new org.jdesktop.layout.GroupLayout(InvestInfoCPSGraphTab);
        InvestInfoCPSGraphTab.setLayout(InvestInfoCPSGraphTabLayout);
        InvestInfoCPSGraphTabLayout.setHorizontalGroup(
            InvestInfoCPSGraphTabLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(InvestInfoCPSGraphTabLayout.createSequentialGroup()
                .addContainerGap()
                .add(InvestInfoCPSGraphTabLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(InvestInfoCPSGraphTabLayout.createSequentialGroup()
                        .add(InvestInfoCPSGraphTabLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(investInfoDescScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 623, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(portfolioStatisticsLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 410, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(investCPSGraphPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 621, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(InvestInfoCPSGraphTabLayout.createSequentialGroup()
                        .add(InvestInfoCPSGraphTabLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(investmentInfoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 674, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(investmentTooltipLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 621, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        InvestInfoCPSGraphTabLayout.setVerticalGroup(
            InvestInfoCPSGraphTabLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(InvestInfoCPSGraphTabLayout.createSequentialGroup()
                .addContainerGap()
                .add(investmentInfoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investInfoDescScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portfolioStatisticsLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investCPSGraphPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(investmentTooltipLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        investmentTabbedPane.addTab("Investment Info", InvestInfoCPSGraphTab);

        investCPSGraphPanelTab.setBackground(new java.awt.Color(255, 255, 255));
        investCPSGraphPanelTab.setLayout(new java.awt.BorderLayout());
        cpsGraphScrollPane.setViewportView(investCPSGraphPanelTab);

        investmentTabbedPane.addTab("Cost per Share History Graph", cpsGraphScrollPane);
        cpsGraphScrollPane.getAccessibleContext().setAccessibleName("");

        investInfoRightPanel.add(investmentTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 640, 540));
        investmentTabbedPane.getAccessibleContext().setAccessibleName("Investment Info");

        investInfoBackButton.setBackground(new java.awt.Color(54, 54, 54));
        investInfoBackButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        investInfoBackButton.setForeground(new java.awt.Color(255, 255, 255));
        investInfoBackButton.setText("Back");
        investInfoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investInfoBackButtonActionPerformed(evt);
            }
        });
        investInfoRightPanel.add(investInfoBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 640, 235, 45));

        investInfoBuySharesButton.setBackground(new java.awt.Color(100, 72, 145));
        investInfoBuySharesButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        investInfoBuySharesButton.setForeground(new java.awt.Color(255, 255, 255));
        investInfoBuySharesButton.setText("Buy Shares");
        investInfoBuySharesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investInfoBuySharesButtonActionPerformed(evt);
            }
        });
        investInfoRightPanel.add(investInfoBuySharesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 640, 235, 45));

        menuRightPanels.add(investInfoRightPanel, "card3");

        investBuySharesRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        investBuySharesRightPanel.setForeground(new java.awt.Color(227, 97, 115));
        investBuySharesRightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buySharesTitleLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        buySharesTitleLabel.setForeground(new java.awt.Color(253, 234, 239));
        buySharesTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buySharesTitleLabel.setText("Buy Shares: Delicious Bites");
        buySharesTitleLabel.setToolTipText("");
        buySharesTitleLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buySharesTitleLabel.setAutoscrolls(true);
        buySharesTitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        investBuySharesRightPanel.add(buySharesTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 20, 630, -1));

        BuySharesCPSGraphLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BuySharesCPSGraphLabel.setForeground(new java.awt.Color(253, 234, 239));
        BuySharesCPSGraphLabel.setText("Cost Per Share History Graph");
        BuySharesCPSGraphLabel.setToolTipText("");
        investBuySharesRightPanel.add(BuySharesCPSGraphLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 360, 30));

        buySharesCPSGraph.setBackground(new java.awt.Color(255, 255, 255));
        buySharesCPSGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buySharesCPSGraphMouseClicked(evt);
            }
        });
        buySharesCPSGraph.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(buySharesCPSGraph);

        investBuySharesRightPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 630, 370));

        buySharesBackButton.setBackground(new java.awt.Color(54, 54, 54));
        buySharesBackButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        buySharesBackButton.setForeground(new java.awt.Color(255, 255, 255));
        buySharesBackButton.setText("Back");
        buySharesBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buySharesBackButtonActionPerformed(evt);
            }
        });
        investBuySharesRightPanel.add(buySharesBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 640, 235, 45));

        bsConfirmSharesPurchaseButton.setBackground(new java.awt.Color(100, 72, 145));
        bsConfirmSharesPurchaseButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 17)); // NOI18N
        bsConfirmSharesPurchaseButton.setForeground(new java.awt.Color(255, 255, 255));
        bsConfirmSharesPurchaseButton.setText("Confirm Shares Purchase");
        bsConfirmSharesPurchaseButton.setToolTipText("");
        bsConfirmSharesPurchaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsConfirmSharesPurchaseButtonActionPerformed(evt);
            }
        });
        investBuySharesRightPanel.add(bsConfirmSharesPurchaseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 640, 235, 45));

        valueNumSharesButtonGroup.add(bsValueRadioButton);
        bsValueRadioButton.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        bsValueRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        bsValueRadioButton.setSelected(true);
        bsValueRadioButton.setText("Value");
        bsValueRadioButton.setBorderPainted(true);
        bsValueRadioButton.setMaximumSize(new java.awt.Dimension(25, 25));
        bsValueRadioButton.setMinimumSize(new java.awt.Dimension(25, 25));
        bsValueRadioButton.setPreferredSize(new java.awt.Dimension(19, 19));
        bsValueRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsValueRadioButtonActionPerformed(evt);
            }
        });
        investBuySharesRightPanel.add(bsValueRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 90, 30));

        bsValueDollarSign.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        bsValueDollarSign.setForeground(new java.awt.Color(88, 88, 88));
        bsValueDollarSign.setText("$");
        investBuySharesRightPanel.add(bsValueDollarSign, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 590, 20, 30));

        valueNumSharesButtonGroup.add(bsNumSharesRadioButton);
        bsNumSharesRadioButton.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        bsNumSharesRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        bsNumSharesRadioButton.setText("Number of Shares");
        bsNumSharesRadioButton.setBorderPainted(true);
        bsNumSharesRadioButton.setMaximumSize(new java.awt.Dimension(25, 25));
        bsNumSharesRadioButton.setMinimumSize(new java.awt.Dimension(25, 25));
        bsNumSharesRadioButton.setPreferredSize(new java.awt.Dimension(19, 19));
        bsNumSharesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsNumSharesRadioButtonActionPerformed(evt);
            }
        });
        investBuySharesRightPanel.add(bsNumSharesRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 560, 210, 30));

        bsNumSharesSpinner.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        bsNumSharesSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, (double)(999999.99d/(cpsValue)), 0.1d));
        bsNumSharesSpinner.setEditor(new javax.swing.JSpinner.DefaultEditor(bsNumSharesSpinner));
        bsNumSharesSpinner.setBackground(new java.awt.Color(255, 255, 255));
        bsNumSharesSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bsNumSharesSpinnerStateChanged(evt);
            }
        });
        bsNumSharesSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bsNumSharesSpinnerPropertyChange(evt);
            }
        });
        bsNumSharesSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bsNumSharesSpinnerKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bsNumSharesSpinnerKeyTyped(evt);
            }
        });
        investBuySharesRightPanel.add(bsNumSharesSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 590, 210, 30));

        bsValueTextField.setBackground(new java.awt.Color(255, 255, 255));
        bsValueTextField.setForeground(new java.awt.Color(88, 88, 88));
        bsValueTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        bsValueTextField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        bsValueTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bsValueTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bsValueTextFieldFocusLost(evt);
            }
        });
        bsValueTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bsValueTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bsValueTextFieldKeyTyped(evt);
            }
        });
        investBuySharesRightPanel.add(bsValueTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 590, 210, 30));

        bsSimulationInfo.setFont(new java.awt.Font("Segoe UI Semibold", 2, 18)); // NOI18N
        bsSimulationInfo.setForeground(new java.awt.Color(255, 255, 255));
        bsSimulationInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bsSimulationInfo.setText("Simulation: Click a dot on the graph to select a cost per share date ");
        investBuySharesRightPanel.add(bsSimulationInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, 590, 30));

        selectedCPStable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        selectedCPStable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {" ", null}
            },
            new String [] {
                "Date", "Cost per Share Value ($)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        selectedCPStable.setAutoscrolls(false);
        selectedCPStable.setEnabled(false);
        selectedCPStable.setFillsViewportHeight(true);
        selectedCPStable.setShowGrid(false);
        selectedCPStable.getTableHeader().setFont(selectedCPStable.getFont());
        selectedCPStable.getTableHeader().setResizingAllowed(false);
        // Center the headers
        ((javax.swing.table.DefaultTableCellRenderer)selectedCPStable.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(javax.swing.JLabel.CENTER);

        // Center the row
        javax.swing.table.DefaultTableCellRenderer centerRenderer = new javax.swing.table.DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( javax.swing.JLabel.CENTER );
        selectedCPStable.setDefaultRenderer(String.class, centerRenderer);
        selectedCPStable.setDefaultRenderer(Double.class, centerRenderer);
        selectedCPStable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                selectedCPStablePropertyChange(evt);
            }
        });
        selectedCPStable.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent evt) {
                selectedCPStableChanged(evt);
            }
        });
        selectedCPStableScrollPane.setViewportView(selectedCPStable);

        investBuySharesRightPanel.add(selectedCPStableScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 520, 60));

        menuRightPanels.add(investBuySharesRightPanel, "card3");

        investBuySharesConfirmationRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        investBuySharesConfirmationRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        buySharesConfirmationTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        buySharesConfirmationTitle.setForeground(new java.awt.Color(253, 234, 239));
        buySharesConfirmationTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buySharesConfirmationTitle.setText("Buy Shares: Delicious Bites");
        buySharesConfirmationTitle.setToolTipText("");
        buySharesConfirmationTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        bscPurchaseConfirmedPanel.setBackground(new java.awt.Color(100, 72, 145));
        bscPurchaseConfirmedPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bscInvestIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bscInvestIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/investIcon.png"))); // NOI18N
        bscPurchaseConfirmedPanel.add(bscInvestIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 590, -1));

        bscPurchaseConfirmedLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        bscPurchaseConfirmedLabel.setForeground(new java.awt.Color(255, 255, 255));
        bscPurchaseConfirmedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bscPurchaseConfirmedLabel.setText("<HTML><center>Investment Purchase Confirmed!<br>\nThe Investment has been added to your portfolio</HTML>");
        bscPurchaseConfirmedPanel.add(bscPurchaseConfirmedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 590, -1));

        buySharesConfirmBackButton.setBackground(new java.awt.Color(54, 54, 54));
        buySharesConfirmBackButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        buySharesConfirmBackButton.setForeground(new java.awt.Color(255, 255, 255));
        buySharesConfirmBackButton.setText("Back");
        buySharesConfirmBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buySharesConfirmBackButtonActionPerformed(evt);
            }
        });

        bscInvestmentStatsLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        bscInvestmentStatsLabel.setForeground(new java.awt.Color(255, 255, 255));
        bscInvestmentStatsLabel.setText("Investment Statistics");

        buySharesStatsPanel.setBackground(new java.awt.Color(153, 107, 229));
        buySharesStatsPanel.setForeground(new java.awt.Color(255, 255, 255));

        bscPurchaseCPSLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        bscPurchaseCPSLabel.setForeground(new java.awt.Color(255, 255, 255));
        bscPurchaseCPSLabel.setText("Purchase Cost per Share: ");

        bscNumSharesLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        bscNumSharesLabel.setForeground(new java.awt.Color(255, 255, 255));
        bscNumSharesLabel.setText("Number of shares:");

        bscAmountInvestedLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        bscAmountInvestedLabel.setForeground(new java.awt.Color(255, 255, 255));
        bscAmountInvestedLabel.setText("Amount invested:");

        bscPurchaseCPSVariable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        bscPurchaseCPSVariable.setForeground(new java.awt.Color(255, 255, 255));
        bscPurchaseCPSVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bscPurchaseCPSVariable.setText("05-09-2023: $21.08");

        bscNumSharesVariable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        bscNumSharesVariable.setForeground(new java.awt.Color(255, 255, 255));
        bscNumSharesVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bscNumSharesVariable.setText("4.27");

        bscAmountInvestedVariable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        bscAmountInvestedVariable.setForeground(new java.awt.Color(255, 255, 255));
        bscAmountInvestedVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bscAmountInvestedVariable.setText("$90.0");

        org.jdesktop.layout.GroupLayout buySharesStatsPanelLayout = new org.jdesktop.layout.GroupLayout(buySharesStatsPanel);
        buySharesStatsPanel.setLayout(buySharesStatsPanelLayout);
        buySharesStatsPanelLayout.setHorizontalGroup(
            buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(buySharesStatsPanelLayout.createSequentialGroup()
                .add(36, 36, 36)
                .add(buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(bscAmountInvestedLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(bscNumSharesLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(bscPurchaseCPSLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 51, Short.MAX_VALUE)
                .add(buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(bscPurchaseCPSVariable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .add(bscNumSharesVariable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(bscAmountInvestedVariable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(40, 40, 40))
        );
        buySharesStatsPanelLayout.setVerticalGroup(
            buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(buySharesStatsPanelLayout.createSequentialGroup()
                .add(44, 44, 44)
                .add(buySharesStatsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(buySharesStatsPanelLayout.createSequentialGroup()
                        .add(bscPurchaseCPSVariable)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bscNumSharesVariable)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bscAmountInvestedVariable))
                    .add(buySharesStatsPanelLayout.createSequentialGroup()
                        .add(bscPurchaseCPSLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bscNumSharesLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bscAmountInvestedLabel)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout investBuySharesConfirmationRightPanelLayout = new org.jdesktop.layout.GroupLayout(investBuySharesConfirmationRightPanel);
        investBuySharesConfirmationRightPanel.setLayout(investBuySharesConfirmationRightPanelLayout);
        investBuySharesConfirmationRightPanelLayout.setHorizontalGroup(
            investBuySharesConfirmationRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(investBuySharesConfirmationRightPanelLayout.createSequentialGroup()
                .add(69, 69, 69)
                .add(investBuySharesConfirmationRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(buySharesConfirmationTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 590, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(investBuySharesConfirmationRightPanelLayout.createSequentialGroup()
                        .add(investBuySharesConfirmationRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(bscInvestmentStatsLabel)
                            .add(buySharesConfirmBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(162, 162, 162))
                    .add(buySharesStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(bscPurchaseConfirmedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 590, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        investBuySharesConfirmationRightPanelLayout.setVerticalGroup(
            investBuySharesConfirmationRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(investBuySharesConfirmationRightPanelLayout.createSequentialGroup()
                .add(59, 59, 59)
                .add(buySharesConfirmationTitle)
                .add(46, 46, 46)
                .add(bscPurchaseConfirmedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(bscInvestmentStatsLabel)
                .add(7, 7, 7)
                .add(buySharesStatsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(40, 40, 40)
                .add(buySharesConfirmBackButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        menuRightPanels.add(investBuySharesConfirmationRightPanel, "card3");

        walletRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        walletRightPanel.setForeground(new java.awt.Color(227, 97, 115));
        walletRightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        walletLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        walletLabel.setForeground(new java.awt.Color(253, 234, 239));
        walletLabel.setText("Wallet");
        walletLabel.setToolTipText("");
        walletLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        walletRightPanel.add(walletLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 117, 152, -1));

        walletBalancePanel.setBackground(new java.awt.Color(255, 255, 255));

        walletBalanceAmount.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        walletBalanceAmount.setForeground(new java.awt.Color(88, 88, 88));
        walletBalanceAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        walletBalanceAmount.setText("$1,000.00");

        walletBalanceLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        walletBalanceLabel.setForeground(new java.awt.Color(88, 88, 88));
        walletBalanceLabel.setText("Wallet Balance:  ");

        org.jdesktop.layout.GroupLayout walletBalancePanelLayout = new org.jdesktop.layout.GroupLayout(walletBalancePanel);
        walletBalancePanel.setLayout(walletBalancePanelLayout);
        walletBalancePanelLayout.setHorizontalGroup(
            walletBalancePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(walletBalancePanelLayout.createSequentialGroup()
                .add(100, 100, 100)
                .add(walletBalanceLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(walletBalanceAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        walletBalancePanelLayout.setVerticalGroup(
            walletBalancePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(walletBalancePanelLayout.createSequentialGroup()
                .add(41, 41, 41)
                .add(walletBalancePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(walletBalanceAmount)
                    .add(walletBalanceLabel))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        walletRightPanel.add(walletBalancePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 221, -1, -1));

        withdrawAmountLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 19)); // NOI18N
        withdrawAmountLabel.setForeground(new java.awt.Color(255, 255, 255));
        withdrawAmountLabel.setText("Withdraw Amount:  ");
        walletRightPanel.add(withdrawAmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 406, -1, 60));

        walletWithdrawButton.setBackground(new java.awt.Color(72, 72, 72));
        walletWithdrawButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        walletWithdrawButton.setForeground(new java.awt.Color(255, 255, 255));
        walletWithdrawButton.setText("Withdraw");
        walletWithdrawButton.setBorder(null);
        walletWithdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletWithdrawButtonActionPerformed(evt);
            }
        });
        walletRightPanel.add(walletWithdrawButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 409, 145, 61));

        withdrawDollarSign.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        withdrawDollarSign.setForeground(new java.awt.Color(88, 88, 88));
        withdrawDollarSign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        withdrawDollarSign.setText("$");
        walletRightPanel.add(withdrawDollarSign, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 412, 30, 50));

        walletTopUpButton.setBackground(new java.awt.Color(100, 72, 145));
        walletTopUpButton.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        walletTopUpButton.setForeground(new java.awt.Color(255, 255, 255));
        walletTopUpButton.setText("Top Up");
        walletTopUpButton.setBorder(null);
        walletTopUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletTopUpButtonActionPerformed(evt);
            }
        });
        walletRightPanel.add(walletTopUpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 504, 145, 61));

        topUpDollarSign.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        topUpDollarSign.setForeground(new java.awt.Color(88, 88, 88));
        topUpDollarSign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topUpDollarSign.setText("$");
        walletRightPanel.add(topUpDollarSign, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 503, 30, 60));

        topUpAmountLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 19)); // NOI18N
        topUpAmountLabel.setForeground(new java.awt.Color(255, 255, 255));
        topUpAmountLabel.setText("Top Up Amount:");
        walletRightPanel.add(topUpAmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 509, 168, 50));

        walletWithdrawTextField.setBackground(new java.awt.Color(255, 255, 255));
        walletWithdrawTextField.setForeground(new java.awt.Color(88, 88, 88));
        walletWithdrawTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        walletWithdrawTextField.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        walletWithdrawTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                walletWithdrawTextFieldFocusGained(evt);
            }
        });
        walletWithdrawTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletWithdrawTextFieldActionPerformed(evt);
            }
        });
        walletWithdrawTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                walletWithdrawTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                walletWithdrawTextFieldKeyTyped(evt);
            }
        });
        walletRightPanel.add(walletWithdrawTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 409, 190, 61));

        walletTopUpTextField.setBackground(new java.awt.Color(255, 255, 255));
        walletTopUpTextField.setForeground(new java.awt.Color(88, 88, 88));
        walletTopUpTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        walletTopUpTextField.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        walletTopUpTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                walletTopUpTextFieldFocusGained(evt);
            }
        });
        walletTopUpTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                walletTopUpTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                walletTopUpTextFieldKeyTyped(evt);
            }
        });
        walletRightPanel.add(walletTopUpTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 504, 190, 61));

        walletWithdrawEntireBalanceCheckbox.setFont(new java.awt.Font("Segoe UI Black", 0, 19)); // NOI18N
        walletWithdrawEntireBalanceCheckbox.setForeground(new java.awt.Color(255, 255, 255));
        walletWithdrawEntireBalanceCheckbox.setText("  Withdraw entire wallet balance");
        walletWithdrawEntireBalanceCheckbox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        walletWithdrawEntireBalanceCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletWithdrawEntireBalanceCheckboxActionPerformed(evt);
            }
        });
        walletRightPanel.add(walletWithdrawEntireBalanceCheckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 560, -1));

        menuRightPanels.add(walletRightPanel, "card3");

        accountInfoRightPanel.setBackground(new java.awt.Color(227, 97, 115));
        accountInfoRightPanel.setForeground(new java.awt.Color(227, 97, 115));

        accountInfoLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 40)); // NOI18N
        accountInfoLabel.setForeground(new java.awt.Color(253, 234, 239));
        accountInfoLabel.setText("Account Information");
        accountInfoLabel.setToolTipText("");
        accountInfoLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        accountInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        accountInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AccInfoUsernameVariable.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AccInfoUsernameVariable.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoUsernameVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AccInfoUsernameVariable.setText("Fran00");
        accountInfoPanel.add(AccInfoUsernameVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 270, -1));

        AccInfoFullNameVariable.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AccInfoFullNameVariable.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoFullNameVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AccInfoFullNameVariable.setText("Fran Nel");
        accountInfoPanel.add(AccInfoFullNameVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 270, -1));

        AccInfoBankVariable.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AccInfoBankVariable.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoBankVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AccInfoBankVariable.setText("06-0115-7263-625427");
        accountInfoPanel.add(AccInfoBankVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 270, -1));

        AccInfoDOBVariable.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AccInfoDOBVariable.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoDOBVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AccInfoDOBVariable.setText("21 November 2003");
        accountInfoPanel.add(AccInfoDOBVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 270, -1));

        AccInfoWalletBalanceVariable.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AccInfoWalletBalanceVariable.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoWalletBalanceVariable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AccInfoWalletBalanceVariable.setText("$1,000.00 ");
        accountInfoPanel.add(AccInfoWalletBalanceVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 270, -1));

        AccInfoUsernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        AccInfoUsernameLabel.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoUsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AccInfoUsernameLabel.setText("Username: ");
        accountInfoPanel.add(AccInfoUsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 200, -1));

        AccInfoFullNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        AccInfoFullNameLabel.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoFullNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AccInfoFullNameLabel.setText("Full Name: ");
        accountInfoPanel.add(AccInfoFullNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 200, -1));

        AccInfoBankLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        AccInfoBankLabel.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoBankLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AccInfoBankLabel.setText("Bank Account Number:");
        accountInfoPanel.add(AccInfoBankLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 230, -1));

        AccInfoDOBLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        AccInfoDOBLabel.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoDOBLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AccInfoDOBLabel.setText("Date of Birth");
        accountInfoPanel.add(AccInfoDOBLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 200, -1));

        AccInfoWalletBalanceLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        AccInfoWalletBalanceLabel.setForeground(new java.awt.Color(88, 88, 88));
        AccInfoWalletBalanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AccInfoWalletBalanceLabel.setText("Wallet Balance:");
        accountInfoPanel.add(AccInfoWalletBalanceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 200, -1));

        org.jdesktop.layout.GroupLayout accountInfoRightPanelLayout = new org.jdesktop.layout.GroupLayout(accountInfoRightPanel);
        accountInfoRightPanel.setLayout(accountInfoRightPanelLayout);
        accountInfoRightPanelLayout.setHorizontalGroup(
            accountInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(accountInfoRightPanelLayout.createSequentialGroup()
                .add(64, 64, 64)
                .add(accountInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(accountInfoRightPanelLayout.createSequentialGroup()
                        .add(81, 81, 81)
                        .add(accountInfoLabel))
                    .add(accountInfoPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 590, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        accountInfoRightPanelLayout.setVerticalGroup(
            accountInfoRightPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(accountInfoRightPanelLayout.createSequentialGroup()
                .add(124, 124, 124)
                .add(accountInfoLabel)
                .add(45, 45, 45)
                .add(accountInfoPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 345, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(911, Short.MAX_VALUE))
        );

        menuRightPanels.add(accountInfoRightPanel, "card3");

        menuSplitPanel.setRightComponent(menuRightPanels);

        menuPanel.add(menuSplitPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -8, 1040, 1480));

        getContentPane().add(menuPanel, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginUsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginUsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginUsernameTextFieldActionPerformed

    /*
        This method..
    */
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String username = loginUsernameTextField.getText();
        String password = String.valueOf(loginPasswordTextField.getPassword());

        if (!loginTextFieldsAreEmpty(username, password))
        {
            if (account.checkAccountExists(username, password))
            {
                account.setLoginAccount(username, password);

                setPortfolioCompanyList();
                updateAccountDisplay();
                updateCompaniesDisplay();

                mainCardLayout.show(this.getContentPane(),"menuPanel");
                menuCardLayout.show(menuRightPanels, "portfolio");
            }
            else
            {
                warningDialogueTitle.setText(String.format(html, "Username or Password is incorrect"));
                warningDialogueDesc.setText(String.format(html, "Please ensure you have entered your username and password correctly"));
                warningDialogue.setVisible(true);
            }
        }
        
        else
        {
            warningDialogueTitle.setText(String.format(html, "Username or Password is missing"));
            warningDialogueDesc.setText(String.format(html, "Please ensure you have entered your username and password"));
            warningDialogue.setVisible(true);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void registerHereButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerHereButtonMouseClicked
    }//GEN-LAST:event_registerHereButtonMouseClicked

    
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        pressedButton = registerButton;
        
        String newUsername = registerUsernameTextField.getText().trim();
        String newPassword = registerPasswordTextField.getText().trim();
        String newFullName = registerFullNameTextField.getText().trim();
        String newBankAccountNumber = registerBankAccountNumber.getText().trim();
        String newDateOfBirth = String.format("%s %s %s", registerDayComboBox.getSelectedItem(), registerMonthComboBox.getSelectedItem(), registerYearComboBox.getSelectedItem());
        
        if (newUsername.length() == 0 || newPassword.length() == 0 || newFullName.length() == 0 || newBankAccountNumber.contains(" "))
        {
            warningDialogueTitle.setText(String.format(html, "Account Information missing"));
            warningDialogueDesc.setText(String.format(html, "Please make sure all account information is entered"));
            warningDialogue.setVisible(true);
        }
        else
        {
            if (newUsername.length() < 3 || newPassword.length() < 5)
            {
                warningDialogueTitle.setText(String.format(html, "Username or Password is too short"));
                warningDialogueDesc.setText(String.format(html, "Please enter a username that is more than 3 characters and a password that is more than 5 characters"));
                warningDialogue.setVisible(true);
            }
            else
            {
                newAccount = new Account(newUsername, newPassword, newFullName, newBankAccountNumber, newDateOfBirth);
                
                if (newAccount.checkAccountExists(newUsername))
                {
                    warningDialogueTitle.setText(String.format(html, "Username already exists"));
                    warningDialogueDesc.setText(String.format(html, "The entered username already exists, please enter another username"));
                    warningDialogue.setVisible(true);
                }
                else
                {
                    confirmationDialogueTitle.setText(String.format(html, "Account confirmation"));
                    confirmationDialogueDesc.setText(String.format(html,"Do you want to create an account with the details entered?"));
                    confirmationDialogue.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void loginHereButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginHereButtonMouseClicked

    }//GEN-LAST:event_loginHereButtonMouseClicked

    private void registerUsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerUsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerUsernameTextFieldActionPerformed

    private void registerPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerPasswordTextFieldActionPerformed

    private void registerFullNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerFullNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerFullNameTextFieldActionPerformed

    private void registerDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerDayComboBoxActionPerformed

    private void registerYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerYearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerYearComboBoxActionPerformed
    
    private void registerMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMonthComboBoxActionPerformed
        updateDayComboBox();
    }//GEN-LAST:event_registerMonthComboBoxActionPerformed

    private void registerDayComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerDayComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_registerDayComboBoxMouseClicked

    private void registerMonthComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMonthComboBoxMouseClicked

    }//GEN-LAST:event_registerMonthComboBoxMouseClicked

    private void accountInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountInfoButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"accountInfo");
        setMenuButtonColours(accountInfoButton, menuButtonList);
    }//GEN-LAST:event_accountInfoButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        mainCardLayout.show(this.getContentPane(),"loginRegisterPanel");
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void pInvestInfoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pInvestInfoBackButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"portfolio");
    }//GEN-LAST:event_pInvestInfoBackButtonActionPerformed

    private void walletButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"wallet");
        setMenuButtonColours(walletButton, menuButtonList);
    }//GEN-LAST:event_walletButtonActionPerformed

    private void portfolioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portfolioButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"portfolio");
        setMenuButtonColours(portfolioButton, menuButtonList);
    }//GEN-LAST:event_portfolioButtonActionPerformed

    private void portfolioInvestmentsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_portfolioInvestmentsListMouseClicked
        chosenPortfolioInvestment = getPortfolioListItemInvestment(account, portfolioInvestmentsList.getSelectedIndex());
        
        menuCardLayout.show(menuRightPanels,"portfolioInvestInfo");
        setPortfolioInvestmentInfoDisplay(chosenPortfolioInvestment);
    }//GEN-LAST:event_portfolioInvestmentsListMouseClicked
    
    /**
        Updates and displays investment information for a selected portfolio investment
    */
    private void setPortfolioInvestmentInfoDisplay(Investment investment)
    {
        boolean found = false;
        
        // check if invested company is present in company lists and set it to found company to ensure data consistency
        for (int i=0; i<lowRiskInvestments.companyList.size(); i++)
        {
            if (investment.getCompanyInvested().getName().equals(lowRiskInvestments.companyList.get(i).getName()))
            {
                investment.setCompanyInvested(lowRiskInvestments.companyList.get(i));
                found = true;
            }
        }
        if (!found)
        {
            for (int i=0; i<startupInvestments.companyList.size(); i++)
            {
                if (investment.getCompanyInvested().getName().equals(startupInvestments.companyList.get(i).getName()))
                {
                    investment.setCompanyInvested(startupInvestments.companyList.get(i));
                    found = true;
                }
            }
        }
        
        portfolioInfoTitle.setText(investment.getCompanyInvested().getName());
        
        // Update Portfolio investment graph
        portfolioCPSgraphPanel.removeAll();
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                CostPerShareGraph chart5 = new CostPerShareGraph(
                    null,
                    investment.getCompanyInvested(),
                    portfolioCPSgraphPanel);

                portfolioCPSgraphPanel.add(chart5, BorderLayout.CENTER);
                portfolioCPSgraphPanel.validate();
            }
        });
        
        // Update Investment statistics
        pPurchaseCPSVariable.setText(investment.getPurchaseCPS().toString());
        pCurrentCPSVariable.setText(investment.getCurrentCPS().toString());
        pNumOfSharesVariable.setText(String.format("%.2f", investment.getNumShares()));
        pAmountInvestedVariable.setText(dollarStringFormat(investment.getAmountInvested()));
        pProfitLossVariable.setText(dollarStringFormat(investment.getProfit()));
        pROIVariable.setText(smallNumberStringFormat(investment.getReturnOnInvestment())+"%");
        pTotalValueVariable.setText(dollarStringFormat(investment.getValue()));
        
        // Shares sold page statistics
        portfolioSharesSoldTitle.setText("Shares Sold: "+investment.getCompanyInvested().getName());
        pssPurchaseCPSVariable.setText(investment.getPurchaseCPS().toString());
        pssCurrentCPSVariable.setText(investment.getCurrentCPS().toString());
        pssNumOfSharesVariable.setText(String.format("%.2f", investment.getNumShares()));
        pssAmountInvestedVariable.setText(dollarStringFormat(investment.getAmountInvested()));
        pssProfitLossVariable.setText(dollarStringFormat(investment.getProfit()));
        pssROIVariable.setText(smallNumberStringFormat(investment.getReturnOnInvestment())+"%");
        pssTotalValueVariable.setText(dollarStringFormat(investment.getValue()));
    }
    
    /*
        This method is triggered when the "Invest" button is clicked. It performs the following actions:
         - Updates the display of available companies for investment.
         - Navigates to the "invest" panel.
         - Sets the color of the "Invest" button in the menu to indicate the current menu selection.
    */
    private void investButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investButtonActionPerformed
        updateCompaniesDisplay();
        menuCardLayout.show(menuRightPanels,"invest");
        setMenuButtonColours(investButton, menuButtonList);
    }//GEN-LAST:event_investButtonActionPerformed

    /**
        This method is triggered when the "Sell Shares" button is clicked in the portfolio investment information panel.
        It performs the following actions:
        - Sets the 'pressedButton' variable to indicate that the "Sell Shares" button triggered this action.
        - Displays a confirmation dialog to confirm the user's intention to sell their shares for the selected company.
    */
    private void pInvestInfoSellSharesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pInvestInfoSellSharesButtonActionPerformed
        pressedButton = pInvestInfoSellSharesButton;
        confirmationDialogueTitle.setText(String.format(html, "Are you sure you want to sell your shares for this company?"));
        confirmationDialogueDesc.setText(String.format("<HTML><body style='width: 320spx'>%s will disappear from your portfolio and the shares value $%.2f will be deposited into your wallet<HTML>", 
                chosenPortfolioInvestment.getCompanyInvested().getName(),
                chosenPortfolioInvestment.getValue()));
        confirmationDialogue.setVisible(true);
    }//GEN-LAST:event_pInvestInfoSellSharesButtonActionPerformed

    private void loginPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginPasswordTextFieldActionPerformed

    private void registerHereButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerHereButtonMouseReleased
        loginRegisterCardLayout.show(loginRegisterRightPanels,"register");
    }//GEN-LAST:event_registerHereButtonMouseReleased

    private void loginHereButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginHereButtonMouseReleased
        loginRegisterCardLayout.show(loginRegisterRightPanels,"login");
    }//GEN-LAST:event_loginHereButtonMouseReleased

    /*
        This method handles the action when the user clicks the wallet withdrawal button.
        It retrieves the withdrawal amount from the text field, checks if it's a valid amount, 
        and then processes the withdrawal if the amount is within the available wallet balance. 
    */
    private void walletWithdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletWithdrawButtonActionPerformed
        String value = walletWithdrawTextField.getText().replaceAll(",", "");
        
        if (!(value.isBlank() || value.isEmpty()))
        {
            if (Double.valueOf(value) > Double.valueOf(walletBalanceAmount.getText().replaceAll("[$,]", "")))
            {
                warningDialogueTitle.setText(String.format(html,"Unable to withdraw: Insufficient wallet balance"));
                warningDialogueDesc.setText(String.format(html,"Please enter a withdraw amount that does not exceed your wallet balance"));
                warningDialogue.setVisible(true);
            }
            else
            {
                account.getWallet().withdraw((double)walletWithdrawTextField.getValue());
                updateAccountDisplay();
            }
        }
        else
        {
            warningDialogueTitle.setText(String.format(html,"Unable to withdraw: Field is empty"));
            warningDialogueDesc.setText(String.format(html,"Please enter a withdraw amount and try again"));
            warningDialogue.setVisible(true);
        }
    }//GEN-LAST:event_walletWithdrawButtonActionPerformed

    /*
        This method handles the action when the user clicks the wallet top-up button.
        It retrieves the top-up amount from the text field, processes the top-up if a valid 
        amount is provided, and updates the account display accordingly.
    */
    private void walletTopUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletTopUpButtonActionPerformed
        String value = walletTopUpTextField.getText();
        
        if (!(value.isBlank() || value.isEmpty()))
        {
            value = value.replaceAll(",", "");
            account.getWallet().topUp(Double.valueOf(value));
            updateAccountDisplay();
        }
        else
        {
            warningDialogueTitle.setText(String.format(html,"Unable to top up: Field is empty"));
            warningDialogueDesc.setText(String.format(html,"Please enter a top up amount and try again"));
            warningDialogue.setVisible(true);
        }
    }//GEN-LAST:event_walletTopUpButtonActionPerformed

    private void lowRiskInvestmentsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lowRiskInvestmentsListMouseClicked
        clearInvestValues();
        
        menuCardLayout.show(menuRightPanels,"investInfo");

        chosenInvestCompany = getInvestListItemCompany(lowRiskInvestments.companyList, lowRiskInvestmentsList.getSelectedIndex());

        updateSelectedCompanyDisplay(chosenInvestCompany);
    }//GEN-LAST:event_lowRiskInvestmentsListMouseClicked
  
    private void investInfoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investInfoBackButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"invest");
    }//GEN-LAST:event_investInfoBackButtonActionPerformed

    private void investInfoBuySharesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investInfoBuySharesButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"buyShares");
        this.bsValueRadioButtonActionPerformed(evt);
    }//GEN-LAST:event_investInfoBuySharesButtonActionPerformed
    
    private void lowRiskInvestmentsListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lowRiskInvestmentsListMouseReleased
        
    }//GEN-LAST:event_lowRiskInvestmentsListMouseReleased

    /*
        This method sets a new investment based on user input. It creates a new Investment object
        with the chosen investment company, the provided investment amount, and cost per share.
        If the 'save' parameter is set to true, the new investment is added to the account's portfolio, 
        and the investment amount is withdrawn from the account's wallet.
    */
    private void setNewInvestment(boolean save)
    {
        newInvestment = new Investment(chosenInvestCompany, Double.valueOf(bsValueTextField.getText().replaceAll(",", "")), 
                new CostPerShare((double)selectedCPStable.getValueAt(0, 1), (String)selectedCPStable.getValueAt(0, 0)));
        
        // If save boolean is true, add the new investment to the account's portfolio
        // and withdraw the investment amount from the account's wallet.
        if (save)
        {
            account.getAccountPortfolio().addInvestment(newInvestment);
            account.getWallet().withdraw(Double.valueOf(bsValueTextField.getText().replaceAll(",", "")));
        }
    }
    
    private void setBuySharesConfirmedDisplay(Investment newInvestment)
    {
        buySharesConfirmationTitle.setText("Buy Shares: "+newInvestment.getCompanyInvested().getName());
        bscPurchaseCPSVariable.setText(newInvestment.getPurchaseCPS().toString());
        bscNumSharesVariable.setText(String.format("%.2f", newInvestment.getNumShares()));
        bscAmountInvestedVariable.setText(dollarStringFormat(newInvestment.getAmountInvested()));
    }
    
    /*
        This method is triggered when the "Confirm Shares Purchase" button is pressed.
        It validates the input for buying shares and displays warning or confirmation dialogs accordingly.
    */
    private void bsConfirmSharesPurchaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsConfirmSharesPurchaseButtonActionPerformed
        
        if (cpsValue == 0.0)  
        {
            // Display a warning if the cost per share date is not selected.
            warningDialogueTitle.setText(String.format(html, "Cost per share date not selected"));
            warningDialogueDesc.setText(String.format(html, "Please click a point on the graph to select a cost per share"));
            warningDialogue.setVisible(true);
        }
        else
        {
            // Display a warning if the value field is empty.
            if (bsValueTextField.getText().isEmpty() || bsValueTextField.getText().isBlank()) // empty value field warning dialogue window
            {
                warningDialogueTitle.setText(String.format(html, "Value field is empty"));
                warningDialogueDesc.setText(String.format(html, "Please enter the amount you want to invest into the company in the value field or adjust the number of shares"));
                warningDialogue.setVisible(true);
            }
            else
            {
                double value = Double.valueOf(bsValueTextField.getText().replaceAll(",", ""));
                
                // Display a warning if the investment value is zero.
                if (value == 0.0)  
                {
                    warningDialogueTitle.setText(String.format(html, "Value cannot be zero"));
                    warningDialogueDesc.setText(String.format(html, "Please enter the amount you want to invest into the company in the value field or adjust the number of shares"));
                    warningDialogue.setVisible(true);
                }
                // Display a warning if the investment value exceeds the wallet balance.
                if (value > account.getWallet().getAccountBalance())
                {
                    warningDialogueTitle.setText(String.format(html, "Insufficient wallet funds"));
                    warningDialogueDesc.setText(String.format(html, "Please provide an amount below your wallet balance, or top up in the wallet tab for more funds"));
                    warningDialogue.setVisible(true);
                }
                // If the input is valid, prepare a new investment and display a confirmation dialog.
                if (value <= account.getWallet().getAccountBalance() && value > 0.0) 
                {
                    setNewInvestment(false);
                    pressedButton = bsConfirmSharesPurchaseButton;

                    confirmationDialogueTitle.setText(String.format(html, "Are you sure you want to buy shares in this company?"));
                    confirmationDialogueDesc.setText(String.format("<HTML><body style='width: 320spx'> $%.2f %s %s </HTML>", 
                            newInvestment.getAmountInvested(),
                            " will be withdrawn from your wallet and invested into ",
                            newInvestment.getCompanyInvested().getName()));
                    confirmationDialogue.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_bsConfirmSharesPurchaseButtonActionPerformed
    
    private void buySharesBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buySharesBackButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"invest");
    }//GEN-LAST:event_buySharesBackButtonActionPerformed

    private void bsValueRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsValueRadioButtonActionPerformed
        bsNumSharesSpinner.setEnabled(false);
        bsValueTextField.setEnabled(true);
    }//GEN-LAST:event_bsValueRadioButtonActionPerformed

    private void bsNumSharesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsNumSharesRadioButtonActionPerformed
        bsNumSharesSpinner.setEnabled(true);
        bsValueTextField.setEnabled(false);
    }//GEN-LAST:event_bsNumSharesRadioButtonActionPerformed

    private void portfolioInvestmentsListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_portfolioInvestmentsListMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_portfolioInvestmentsListMousePressed

    private void buySharesConfirmBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buySharesConfirmBackButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"invest");
    }//GEN-LAST:event_buySharesConfirmBackButtonActionPerformed

    private void pSharesSoldBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSharesSoldBackButtonActionPerformed
        menuCardLayout.show(menuRightPanels,"portfolio");
    }//GEN-LAST:event_pSharesSoldBackButtonActionPerformed

    private void bsValueTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsValueTextFieldKeyTyped
        filterLetters(evt);
        limitInputDollar(evt, bsValueTextField.getText());
        bsValueTextField.setTransferHandler(null); // disable pasting into textfield
    }//GEN-LAST:event_bsValueTextFieldKeyTyped

    private void bsValueTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsValueTextFieldKeyReleased
        String val = bsValueTextField.getText();
                
        if (!(val.isEmpty() || val.isBlank()))
        {
            int decimalpointCount = 0;
            
            for (int i=0; i<val.length(); i++)
            {
                if (val.charAt(i) == '.')
                {
                    decimalpointCount++;
                }
            }
            
            if (!(bsValueTextField.getText().equals(".")))
            {
                if (decimalpointCount <= 1) // Only set spinner numShares if there are 1 or less decimal points to prevent NumberFormatException
                {
                    double numShares = (Double.valueOf(bsValueTextField.getText().replaceAll(",", ""))/cpsValue);

                    bsNumSharesSpinner.setValue(numShares);
                }
            }
        }
        else
        {
            bsNumSharesSpinner.setValue(0);
            bsValueTextField.setValue(0);
            bsValueTextField.setText("");
        }
    }//GEN-LAST:event_bsValueTextFieldKeyReleased

    private void walletWithdrawTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_walletWithdrawTextFieldKeyTyped
        filterLetters(evt);
        limitInputDollar(evt, walletWithdrawTextField.getText());
        walletWithdrawTextField.setTransferHandler(null); // disable pasting into textfield
    }//GEN-LAST:event_walletWithdrawTextFieldKeyTyped

    private void walletTopUpTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_walletTopUpTextFieldKeyTyped
        filterLetters(evt);
        limitInputDollar(evt, walletTopUpTextField.getText());
        walletTopUpTextField.setTransferHandler(null); // disable pasting into textfield
    }//GEN-LAST:event_walletTopUpTextFieldKeyTyped

    private void bsNumSharesSpinnerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsNumSharesSpinnerKeyTyped

    }//GEN-LAST:event_bsNumSharesSpinnerKeyTyped

    private void bsNumSharesSpinnerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bsNumSharesSpinnerPropertyChange

    }//GEN-LAST:event_bsNumSharesSpinnerPropertyChange

    private void bsNumSharesSpinnerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsNumSharesSpinnerKeyReleased
        
    }//GEN-LAST:event_bsNumSharesSpinnerKeyReleased

    private void bsNumSharesSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bsNumSharesSpinnerStateChanged

        boolean change = bsNumSharesSpinner.isEnabled();
        
        if (change)
        {
            double value = (double)bsNumSharesSpinner.getValue()*cpsValue;
            bsValueTextField.setValue(value);
        }
    }//GEN-LAST:event_bsNumSharesSpinnerStateChanged

    private void bsValueTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bsValueTextFieldFocusLost
    }//GEN-LAST:event_bsValueTextFieldFocusLost

    private void bsValueTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bsValueTextFieldFocusGained
        bsValueTextField.setText(""); 
    }//GEN-LAST:event_bsValueTextFieldFocusGained

    /*
        This method shows and hides the login page's jPasswordField on click
    */
    private void hidePasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hidePasswordCheckBoxActionPerformed
        if (hidePasswordCheckBox.isSelected())
        {
            hidePasswordCheckBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/hidePwdIcon.png")));
            loginPasswordTextField.setEchoChar('*'); // * as echo char hides text
        }
        else
        {
            hidePasswordCheckBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/showPwdIcon.png")));
            loginPasswordTextField.setEchoChar('\0'); // null character as echo char shows text
        }
    }//GEN-LAST:event_hidePasswordCheckBoxActionPerformed

    private void walletWithdrawTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletWithdrawTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_walletWithdrawTextFieldActionPerformed

    private void warningOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warningOkButtonActionPerformed
        warningDialogue.setVisible(false);
    }//GEN-LAST:event_warningOkButtonActionPerformed

    private void walletWithdrawTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_walletWithdrawTextFieldFocusGained
        walletWithdrawTextField.setText(""); 
    }//GEN-LAST:event_walletWithdrawTextFieldFocusGained

    private void walletTopUpTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_walletTopUpTextFieldFocusGained
        walletTopUpTextField.setText(""); 
    }//GEN-LAST:event_walletTopUpTextFieldFocusGained

    private void walletWithdrawEntireBalanceCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletWithdrawEntireBalanceCheckboxActionPerformed
        if (walletWithdrawEntireBalanceCheckbox.isSelected())
        {
            walletWithdrawTextField.setText(walletBalanceAmount.getText().replaceAll("\\$", ""));
            walletWithdrawTextField.setValue(Double.valueOf(walletBalanceAmount.getText().replaceAll("[\\$,]", "")));
            walletWithdrawTextField.setEnabled(false);
        }
        else
        {
            walletWithdrawTextField.setEnabled(true);
        }
    }//GEN-LAST:event_walletWithdrawEntireBalanceCheckboxActionPerformed

    // set to values to 0 if field is emptied
    private void walletWithdrawTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_walletWithdrawTextFieldKeyReleased
        if (walletWithdrawTextField.getText().isEmpty() || walletWithdrawTextField.getText().isBlank())
        {
            walletWithdrawTextField.setValue(0);
            walletWithdrawTextField.setText("");
        }
    }//GEN-LAST:event_walletWithdrawTextFieldKeyReleased

    private void walletTopUpTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_walletTopUpTextFieldKeyReleased
        if (walletTopUpTextField.getText().isEmpty() || walletTopUpTextField.getText().isBlank())
        {
            walletTopUpTextField.setValue(0);
            walletTopUpTextField.setText("");
        }
    }//GEN-LAST:event_walletTopUpTextFieldKeyReleased

    private void startupInvestmentsListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startupInvestmentsListMouseReleased

    }//GEN-LAST:event_startupInvestmentsListMouseReleased

    private void startupInvestmentsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startupInvestmentsListMouseClicked
        clearInvestValues();
        
        java.awt.Rectangle listBounds = portfolioInvestmentsList.getCellBounds(0, portfolioInvestmentsList.getLastVisibleIndex()); 

        if (listBounds != null)
        {
            menuCardLayout.show(menuRightPanels,"investInfo");

            chosenInvestCompany = getInvestListItemCompany(startupInvestments.companyList, startupInvestmentsList.getSelectedIndex());
            updateSelectedCompanyDisplay(chosenInvestCompany);
        }
    }//GEN-LAST:event_startupInvestmentsListMouseClicked

    private void selectedCPStablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_selectedCPStablePropertyChange

    }//GEN-LAST:event_selectedCPStablePropertyChange

    /**
        This method is called when the Cost Per Share (CPS), is changed.
        It responds to TableModelEvent updates and retrieves the CPS value from the first table row.
        If the selected cell contains a non-null value, it updates the 'cpsValue' variable and triggers actions in response to CPS changes.
    */
    public void selectedCPStableChanged(TableModelEvent evt)
    {
        if (evt.getType() == TableModelEvent.UPDATE)
        {
            if (selectedCPStable.getValueAt(0, 1) != null)
            {
                cpsValue = (double)selectedCPStable.getValueAt(0, 1);
            }
        }
    }
    
    private void buySharesCPSGraphMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buySharesCPSGraphMouseClicked
    
    }//GEN-LAST:event_buySharesCPSGraphMouseClicked

    // This method clears wallet panel components to default values
    private void clearWalletPanelInfo()
    {
        walletWithdrawTextField.setValue(0);
        walletWithdrawTextField.setText("");
        walletWithdrawTextField.setEnabled(true);
        walletTopUpTextField.setValue(0);
        walletTopUpTextField.setText("");
        walletWithdrawEntireBalanceCheckbox.setSelected(false);
    }
    
    /*
        This method is triggered when the "OK" button in the confirmation dialog is pressed.
        It performs different actions based on the button that triggered the confirmation dialog:
        - If the "Sell Shares" button triggered the dialog, it sells all shares for the chosen portfolio investment, updates displays, and navigates to the "portfolioSharesSold" panel.
        - If the "Confirm Shares Purchase" button triggered the dialog, it confirms the purchase of shares, updates displays, and navigates to the "buySharesConfirmation" panel.
        - If the "Register" button triggered the dialog, it saves a new account to a file, displays a confirmation message, and navigates to the login panel.

        After processing, it hides the confirmation dialog.
    */
    private void confirmationOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmationOkButtonActionPerformed
        // Sell all shares for the chosen portfolio investment and update displays.
        if (pressedButton.equals(pInvestInfoSellSharesButton))
        {
            account.getAccountPortfolio().sellAllShares(account, chosenPortfolioInvestment);
            
            // Update all displays 
            updateAccountDisplay();
            clearWalletPanelInfo();
            updateCompaniesDisplay();
            updatePortfolioDisplay(account);
            
            menuCardLayout.show(menuRightPanels,"portfolioSharesSold");
        }
        // Confirm the purchase of shares, update displays, and navigate to the "buySharesConfirmation" panel.
        if (pressedButton.equals(bsConfirmSharesPurchaseButton))
        {
            setNewInvestment(true);
            menuCardLayout.show(menuRightPanels,"buySharesConfirmation");
            
            // Update all displays 
            setBuySharesConfirmedDisplay(newInvestment);
            updateAccountDisplay();
            clearWalletPanelInfo();
            updateCompaniesDisplay();
            updatePortfolioDisplay(account);
        }
        // Save a new account to a file, display a confirmation message, and navigate to the login panel.
        if (pressedButton.equals(registerButton))
        {
            newAccount.saveAccountToFile();
            
            // temporarily change warning dialogue to confirmation look
            String originalTitle = warningDialogue.getTitle();
            javax.swing.Icon originalIcon = warningDialogueIcon.getIcon();
            
            warningDialogue.setTitle("Confirmation");
            warningDialogueIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/infoIcon.png")));
            
            warningDialogueTitle.setText(String.format(html, "Account created successfully"));
            warningDialogueDesc.setText(String.format(html, "Your account has been created successfully. Please login with your details on the login page."));
            warningDialogue.setVisible(true);
            
            loginRegisterCardLayout.show(loginRegisterRightPanels,"login");
            
            // revert warning dialogue to original style
            warningDialogue.setTitle(originalTitle);
            warningDialogueIcon.setIcon(originalIcon);
        }
        // Hide the confirmation dialog.
        confirmationDialogue.setVisible(false);
    }//GEN-LAST:event_confirmationOkButtonActionPerformed

    private void confirmationCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmationCancelButtonActionPerformed
        confirmationDialogue.setVisible(false);
    }//GEN-LAST:event_confirmationCancelButtonActionPerformed

    private void registerFullNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_registerFullNameTextFieldKeyTyped
        filterNumbers(evt);
    }//GEN-LAST:event_registerFullNameTextFieldKeyTyped

    /*
        This method gets this year and gets the previous 100 years as a list of years as a DefaultComboBoxModel (for registering year of birth)
    */
    private static DefaultComboBoxModel<String> generateYearArray()
    {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR); 
        
        DefaultComboBoxModel<String> yearArray = new DefaultComboBoxModel<String>();

        int minYear = currentYear-100;
        for (int year = currentYear; year >= minYear; year--)
        {
            yearArray.addElement(String.valueOf(year));
        }
        
        return yearArray;
    }
    
    /*
        This method gets the days in a month so that they appropriately correspond to month-day differences (28,30,31)
    */
    private static int getDaysInMonth(int month)
    {
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.MONTH, month);
        return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
    }
    
    /*
        This method updates the number of days set to a month selected in the combo box
    */
    private static void updateDayComboBox() 
    {
        int selectedMonthIndex = registerMonthComboBox.getSelectedIndex();
        int daysInMonth = getDaysInMonth(selectedMonthIndex);

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (int i = 1; i <= daysInMonth; i++) {
            model.addElement(String.valueOf(i));
        }

        registerDayComboBox.setModel(model); 
    }
    
    /*
        This method makes an inputted image resizable according to inputted label dimensions
    */
    private ImageIcon resizeImage(javax.swing.JLabel label, String imgPath, int w, int h)
    {
        javax.swing.ImageIcon img = new javax.swing.ImageIcon(getClass().getResource(imgPath));

        Image resizableImg = img.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH); // make img resizable by getting scaled instance & setting to label dimensions
        ImageIcon imageIcon = new ImageIcon(resizableImg); // create new ImageIcon from resizable img
        
        return imageIcon;
    }
    
    /*
        This method sets the selected colour to grey and the other unselected button to pink 
    */
    private void setMenuButtonColours(javax.swing.JButton selectedButton, ArrayList<javax.swing.JButton> menuButtonList)
    {
        java.awt.Color selectedColour = new java.awt.Color(88, 88, 88); // gray
        java.awt.Color unselectedColour = new java.awt.Color(203, 75, 93); // pink
        
        for (javax.swing.JButton button : menuButtonList)
        {
            button.setBackground(unselectedColour);
        }
        
        selectedButton.setBackground(selectedColour);
    }
    
    /*
        This method prevents letters from being typed into text fields
        by taking the key event and checking if it is a digit before consuming
    */    
    private void filterLetters(java.awt.event.KeyEvent evt) 
    {                                          
        char c = evt.getKeyChar();
        
        if ((!(Character.isDigit(c) || c == '.')))
        {
            evt.consume();
        }
    }
    
    /*
        This method prevents numbers from being typed into text fields
        by taking the key event and checking if it is a digit before consuming
    */    
    private void filterNumbers(java.awt.event.KeyEvent evt) 
    {                                          
        char c = evt.getKeyChar();
        
        if (Character.isDigit(c))
        {
            evt.consume(); 
        }
    }
    
    /*
        This method prevents more than 6 digits from being typed into a textfield
    */ 
    private void limitInputDollar(java.awt.event.KeyEvent evt, String text)
    {
        int length = 0;
        
        for (char c : text.toCharArray())
        {
            if (c != '.')
            {
                length++;
            }
        }
        
        if (length >= 6) // limit to 6 characters
        {
            evt.consume();
        }
    }

    /*
        This method updates all displayed account information on the GUI
    */
    private void updateAccountDisplay()
    {
        // Account info panel
        AccInfoUsernameVariable.setText(account.getUsername());
        AccInfoFullNameVariable.setText(account.getFullName());
        AccInfoBankVariable.setText(account.getBankAccountNumber());
        AccInfoDOBVariable.setText(account.getDateofBirth());
        AccInfoWalletBalanceVariable.setText(dollarStringFormat(account.getWallet().getAccountBalance()));
        
        // Wallet panel/s
        menuWalletBalanceValue.setText(dollarStringFormat(account.getWallet().getAccountBalance()));
        walletBalanceAmount.setText(dollarStringFormat(account.getWallet().getAccountBalance()));
        
        if (walletWithdrawEntireBalanceCheckbox.isSelected())
        {
            walletWithdrawTextField.setText(walletBalanceAmount.getText().replaceAll("\\$", ""));
        }
        
        // Portfolio panel/s
        updatePortfolioDisplay(account);
    }
    
    /*
        This method updates all displayed company list information on the GUI
    */
    private void updateCompaniesDisplay()
    {
        setPortfolioInvestmentsList(portfolioInvestmentsList, account);
        
        setPortfolioCompanyList();
        updatePortfolioDisplay(account);
        
        setModifiedCompanyLists();
        setCompanyInvestList(lowRiskInvestmentsList, modifiedLowRiskCompanyList);
        setCompanyInvestList(startupInvestmentsList, modifiedStartupCompanyList);
    }
    
    // Return a modified company list that removes portfolio companies from an input company list
    private void setModifiedCompanyLists() {
    modifiedLowRiskCompanyList = new ArrayList<>(lowRiskInvestments.companyList);
    modifiedStartupCompanyList = new ArrayList<>(startupInvestments.companyList);

    // Create a list to store companies to be removed.
    ArrayList<Company> companiesToRemove = new ArrayList<>();

    // Iterate over lowRiskInvestments.companyList and mark companies for removal.
    for (Company iCompany : lowRiskInvestments.companyList) {
        for (Company pCompany : portfolioCompanyList) {
            if (iCompany.getName().equals(pCompany.getName())) {
                companiesToRemove.add(iCompany);
                break;  // Exit inner loop to avoid concurrent modification.
            }
        }
    }

    // Remove marked companies from modifiedLowRiskCompanyList.
    modifiedLowRiskCompanyList.removeAll(companiesToRemove);

    // Repeat the same process for modifiedStartupCompanyList.
    companiesToRemove.clear();

    for (Company iCompany : startupInvestments.companyList) {
        for (Company pCompany : portfolioCompanyList) {
            if (iCompany.getName().equals(pCompany.getName())) {
                companiesToRemove.add(iCompany);
                break;  // Exit inner loop to avoid concurrent modification.
            }
        }
    }

    // Remove marked companies from modifiedStartupCompanyList.
    modifiedStartupCompanyList.removeAll(companiesToRemove);
}
    
    /*
        Setting portfolioCompanyList - for use in filtering out already invested companies from the company selection list in Invest panel
    */
    private void setPortfolioCompanyList()
    {
        portfolioCompanyList = new ArrayList<>();
        portfolioCompanyList.clear();
        
        ArrayList<Company> combinedList = new ArrayList<>();
        combinedList.addAll(lowRiskInvestments.companyList);
        combinedList.addAll(startupInvestments.companyList);
        
        for (Company company : combinedList)
        {
            for (Investment investment : account.getAccountPortfolio().getInvestments())
            {
                if (investment.getCompanyInvested().getName().equalsIgnoreCase(company.getName()))
                {
                    portfolioCompanyList.add(company);
                }
            }
        }
        
    }
    
    private void updatePortfolioDisplay (Account account)
    {
        portfolioTotalAmountInvestedVariable.setText(dollarStringFormat(account.getAccountPortfolio().getTotalInvested()));
        portfolioTotalProfitLossVariable.setText(dollarStringFormat(account.getAccountPortfolio().getTotalProfit()));
        portfolioTotalROIVariable.setText(smallNumberStringFormat(account.getAccountPortfolio().getTotalReturnOnInvestment())+"%");
        portfolioTotalValueVariable.setText(dollarStringFormat(account.getAccountPortfolio().getTotalValue()));
    }
    
    /*
        This method populates CompanyInvestList JList with information about Companies from a company list.
    */
    private void setCompanyInvestList(javax.swing.JList jList, ArrayList<Company> companyList)
    {
        javax.swing.DefaultListModel<String> listModel = new DefaultListModel<>();
        jList.setModel(listModel);
        
        for (Company company : companyList)
        {
            String formattedString = String.format("%s - Cost per share now: $%.2f - %s",
                                                    company.getName(), company.getCostPerShareNow().getCost(), company.getFormattedCategories());
            listModel.addElement(formattedString);
        }
    }
    
    /*
        This method sets the content PortfolioInvestmentsList with information about investments related to the given Account.
    */
    private void setPortfolioInvestmentsList(javax.swing.JList jList, Account account)
    {
        javax.swing.DefaultListModel<String> listModel = new DefaultListModel<>();
        jList.setModel(listModel);
        
        ArrayList<Investment> investments = account.getAccountPortfolio().getInvestments();
        
        for (Investment investment : investments)
        {
            String formattedString = String.format("%s - Profit: $%.2f - ROI: %.4f%% - Value: $%.2f",
                                             investment.getCompanyInvested().getName(), investment.getProfit(), investment.getReturnOnInvestment(), investment.getValue());
            listModel.addElement(formattedString);
        }
    }
    
    /*
        This method gets the selected Company from the JList by corresponding to the index of the companyList 
    */
    private Company getInvestListItemCompany(ArrayList<Company> companyList, int index)
    {
        Company selectedCompany = null;
        
        for (int i=0; i<companyList.size(); i++)
        {
            if (i == index)
            {
                selectedCompany = companyList.get(i);
            }
        }
        
        return selectedCompany;
    }
    
    /*
        This method gets the selected Company from the JList by corresponding to the index of the companyList 
    */
    private Investment getPortfolioListItemInvestment(Account account, int index)
    {
        Investment selectedInvestment = null;
        
        for (int i=0; i<account.getAccountPortfolio().getInvestments().size(); i++)
        {
            if (i == index)
            {
                selectedInvestment = account.getAccountPortfolio().getInvestments().get(i);
            }
        }
        
        return selectedInvestment;
    }
    
    /*
        This method updates all information on the investment info panel with the selected company 
    */
    private void setInvestInfoCompanyDisplay(Company selectedCompany)
    {
        investInfoTitleLabel.setText(selectedCompany.getName());
        investInfoDesc.setText(selectedCompany.printCompanyInfo());
        investInfoDesc.setCaretPosition(0);
        
        // Update graphs
        investCPSGraphPanel.removeAll();
        investCPSGraphPanelTab.removeAll();
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                CostPerShareGraph chart1 = new CostPerShareGraph(
                    null,
                    selectedCompany,
                    investCPSGraphPanel);

                investCPSGraphPanel.add(chart1, BorderLayout.CENTER);
                investCPSGraphPanel.validate();
            }
        });
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                CostPerShareGraph chart2 = new CostPerShareGraph(
                    null,
                    selectedCompany,
                    investCPSGraphPanelTab);

                chart2.setChartPanelSize(investCPSGraphPanelTab.getWidth()+450, investCPSGraphPanelTab.getHeight()-25);
                investCPSGraphPanelTab.add(chart2, BorderLayout.CENTER);
                investCPSGraphPanelTab.validate();
            }
        });
    }
    
    /*
        This method updates all information on the buy shares panel with the selected company 
    */
    private void setBuySharesCompanyDisplay(Company selectedCompany)
    {
        buySharesTitleLabel.setText("Buy Shares: " + selectedCompany.getName());
        investInfoDesc.setText(selectedCompany.printCompanyInfo());
        
        // Update selectable graph
        buySharesCPSGraph.removeAll();
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                CostPerShareGraph chart3 = new CostPerShareGraph(
                    null,
                    selectedCompany,
                    buySharesCPSGraph);

                chart3.setChartPanelSize(buySharesCPSGraph.getWidth()+425, buySharesCPSGraph.getHeight()-25);
                chart3.enableClickableDots(selectedCPStable);
                buySharesCPSGraph.add(chart3, BorderLayout.CENTER);
                buySharesCPSGraph.validate();
            }
        });
    }
    
    private void updateSelectedCompanyDisplay(Company selectedCompany)
    {
        setInvestInfoCompanyDisplay(selectedCompany);
        setBuySharesCompanyDisplay(selectedCompany);
    }
    
    /*
        This method returns an inputted double as a String in dollar format (9,999.00)
    */
    private String dollarStringFormat(double dollarValue)
    {
        DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
        String formattedNumber = "$" + decimalFormat.format(dollarValue);
        
        return formattedNumber;
    }
    
    /*
        This method returns an inputted double as a String in small dollar format (9.0055)
    */
    private String smallNumberStringFormat(double value)
    {
        DecimalFormat decimalFormat = new DecimalFormat("#,##0.0000");
        String formattedNumber = decimalFormat.format(value);
        
        return formattedNumber;
    }
    
    /*
        This method checks if the login text fields are empty and returns a boolean
    */
    
    private boolean loginTextFieldsAreEmpty(String username, String password )
    {
        boolean isEmpty = false;
        
        if (username.isEmpty() || username.isBlank())
        {
            isEmpty = true;
        }
        if (password.isEmpty() || password.isBlank())
        {
            isEmpty = true;
        }
        
        return isEmpty;
    }
    
    private void clearInvestValues()
    {
        cpsValue = 0.0;
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) selectedCPStable.getModel();
        model.setRowCount(0); // removing row clears all values
        model.setRowCount(1); // set row count back to 1 to re-enable table input
        bsValueTextField.setValue(0.0);
        bsValueTextField.setText("");
        bsNumSharesSpinner.setValue(0.0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShareversityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShareversityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShareversityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShareversityGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShareversityGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccInfoBankLabel;
    private javax.swing.JLabel AccInfoBankVariable;
    private javax.swing.JLabel AccInfoDOBLabel;
    private javax.swing.JLabel AccInfoDOBVariable;
    private javax.swing.JLabel AccInfoFullNameLabel;
    private javax.swing.JLabel AccInfoFullNameVariable;
    private javax.swing.JLabel AccInfoUsernameLabel;
    private javax.swing.JLabel AccInfoUsernameVariable;
    private javax.swing.JLabel AccInfoWalletBalanceLabel;
    private javax.swing.JLabel AccInfoWalletBalanceVariable;
    private javax.swing.JLabel BuySharesCPSGraphLabel;
    private javax.swing.JPanel InvestInfoCPSGraphTab;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel RegisterDateOfBirthLabel;
    private javax.swing.JButton accountInfoButton;
    private javax.swing.JLabel accountInfoLabel;
    private javax.swing.JPanel accountInfoPanel;
    private javax.swing.JPanel accountInfoRightPanel;
    private javax.swing.JButton bsConfirmSharesPurchaseButton;
    private javax.swing.JRadioButton bsNumSharesRadioButton;
    private javax.swing.JSpinner bsNumSharesSpinner;
    private javax.swing.JLabel bsSimulationInfo;
    private javax.swing.JLabel bsValueDollarSign;
    private javax.swing.JRadioButton bsValueRadioButton;
    private javax.swing.JFormattedTextField bsValueTextField;
    private javax.swing.JLabel bscAmountInvestedLabel;
    private javax.swing.JLabel bscAmountInvestedVariable;
    private javax.swing.JLabel bscInvestIcon;
    private javax.swing.JLabel bscInvestmentStatsLabel;
    private javax.swing.JLabel bscNumSharesLabel;
    private javax.swing.JLabel bscNumSharesVariable;
    private javax.swing.JLabel bscPurchaseCPSLabel;
    private javax.swing.JLabel bscPurchaseCPSVariable;
    private javax.swing.JLabel bscPurchaseConfirmedLabel;
    private javax.swing.JPanel bscPurchaseConfirmedPanel;
    private javax.swing.JLabel bssSharesSoldLabel;
    private javax.swing.JButton buySharesBackButton;
    private javax.swing.JPanel buySharesCPSGraph;
    private javax.swing.JButton buySharesConfirmBackButton;
    private javax.swing.JLabel buySharesConfirmationTitle;
    private javax.swing.JPanel buySharesStatsPanel;
    private javax.swing.JLabel buySharesTitleLabel;
    private javax.swing.JButton confirmationCancelButton;
    private javax.swing.JDialog confirmationDialogue;
    private javax.swing.JPanel confirmationDialogueButtonPanel;
    private javax.swing.JLabel confirmationDialogueDesc;
    private javax.swing.JLabel confirmationDialogueIcon;
    private javax.swing.JPanel confirmationDialoguePanel;
    private javax.swing.JLabel confirmationDialogueTitle;
    private javax.swing.JButton confirmationOkButton;
    private javax.swing.JScrollPane cpsGraphScrollPane;
    private javax.swing.JCheckBox hidePasswordCheckBox;
    private javax.swing.JButton investButton;
    private javax.swing.JPanel investBuySharesConfirmationRightPanel;
    private javax.swing.JPanel investBuySharesRightPanel;
    private javax.swing.JPanel investCPSGraphPanel;
    private javax.swing.JPanel investCPSGraphPanelTab;
    private javax.swing.JButton investInfoBackButton;
    private javax.swing.JButton investInfoBuySharesButton;
    private javax.swing.JTextArea investInfoDesc;
    private javax.swing.JScrollPane investInfoDescScrollPane;
    private javax.swing.JLabel investInfoLabel;
    private javax.swing.JPanel investInfoRightPanel;
    private javax.swing.JLabel investInfoTitleLabel;
    private javax.swing.JLabel investLabel;
    private javax.swing.JPanel investRightPanel;
    private javax.swing.JScrollPane investScrollPane1;
    private javax.swing.JScrollPane investScrollPane2;
    private javax.swing.JLabel investmentInfoLabel;
    private javax.swing.JTabbedPane investmentTabbedPane;
    private javax.swing.JLabel investmentTooltipLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginHereButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel loginMsgLabel;
    private javax.swing.JLabel loginPasswordLabel;
    private javax.swing.JPasswordField loginPasswordTextField;
    private javax.swing.JPanel loginRegisterLeftPanel;
    private javax.swing.JPanel loginRegisterPanel;
    private javax.swing.JPanel loginRegisterRightPanels;
    private javax.swing.JPanel loginRightPanel;
    private javax.swing.JLabel loginUsernameLabel;
    private javax.swing.JTextField loginUsernameTextField;
    private javax.swing.JLabel logo2;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel lowRiskInvestmentsLabel;
    private javax.swing.JList<String> lowRiskInvestmentsList;
    private javax.swing.JPanel menuLeftPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel menuRightPanels;
    private javax.swing.JSplitPane menuSplitPanel;
    private javax.swing.JPanel menuWalletBalance;
    private javax.swing.JLabel menuWalletBalanceTitle;
    private javax.swing.JLabel menuWalletBalanceValue;
    private javax.swing.JLabel newAccountLabel;
    private javax.swing.JLabel pAmountInvestedLabel;
    private javax.swing.JLabel pAmountInvestedVariable;
    private javax.swing.JLabel pCurrentCPSLabel;
    private javax.swing.JLabel pCurrentCPSVariable;
    private javax.swing.JButton pInvestInfoBackButton;
    private javax.swing.JButton pInvestInfoSellSharesButton;
    private javax.swing.JLabel pNumOfSharesLabel;
    private javax.swing.JLabel pNumOfSharesVariable;
    private javax.swing.JLabel pProfitLossLabel;
    private javax.swing.JLabel pProfitLossVariable;
    private javax.swing.JLabel pPurchaseCPSLabel;
    private javax.swing.JLabel pPurchaseCPSVariable;
    private javax.swing.JLabel pROILabel;
    private javax.swing.JLabel pROIVariable;
    private javax.swing.JButton pSharesSoldBackButton;
    private javax.swing.JLabel pTotalValueLabel;
    private javax.swing.JLabel pTotalValueVariable;
    private javax.swing.JButton portfolioButton;
    private javax.swing.JPanel portfolioCPSgraphPanel;
    private javax.swing.JLabel portfolioInfoTitle;
    private javax.swing.JPanel portfolioInvestInfoRightPanel;
    private javax.swing.JLabel portfolioInvestmentCostPerShareGraph;
    private javax.swing.JLabel portfolioInvestmentStatsLabel;
    private javax.swing.JPanel portfolioInvestmentStatsPanel;
    private javax.swing.JLabel portfolioInvestmentsInfoLabel;
    private javax.swing.JLabel portfolioInvestmentsLabel;
    private javax.swing.JList<String> portfolioInvestmentsList;
    private javax.swing.JScrollPane portfolioInvestmentsScrollPane;
    private javax.swing.JLabel portfolioLabel;
    private javax.swing.JPanel portfolioRightPanel;
    private javax.swing.JPanel portfolioSharesSoldRightPanel;
    private javax.swing.JLabel portfolioSharesSoldTitle;
    private javax.swing.JLabel portfolioStatisticsLabel;
    private javax.swing.JLabel portfolioStatisticsLabel3;
    private javax.swing.JLabel portfolioStatisticsLabel5;
    private javax.swing.JPanel portfolioStatsPanel;
    private javax.swing.JLabel portfolioTotalAmountInvestedLabel;
    private javax.swing.JLabel portfolioTotalAmountInvestedVariable;
    private javax.swing.JLabel portfolioTotalProfitLossLabel;
    private javax.swing.JLabel portfolioTotalProfitLossVariable;
    private javax.swing.JLabel portfolioTotalROILabel;
    private javax.swing.JLabel portfolioTotalROIVariable;
    private javax.swing.JLabel portfolioTotalValueLabel;
    private javax.swing.JLabel portfolioTotalValueVariable;
    private javax.swing.JLabel pssAmountInvestedLabel;
    private javax.swing.JLabel pssAmountInvestedVariable;
    private javax.swing.JLabel pssCurrentCPSLabel;
    private javax.swing.JLabel pssCurrentCPSVariable;
    private javax.swing.JLabel pssInvestIcon;
    private javax.swing.JLabel pssInvestmentStatistics;
    private javax.swing.JPanel pssInvestmentStatsPanel;
    private javax.swing.JLabel pssNumOfSharesLabel;
    private javax.swing.JLabel pssNumOfSharesVariable;
    private javax.swing.JLabel pssProfitLossLabel;
    private javax.swing.JLabel pssProfitLossVariable;
    private javax.swing.JLabel pssPurchaseCPSLabel;
    private javax.swing.JLabel pssPurchaseCPSVariable;
    private javax.swing.JLabel pssROILabel;
    private javax.swing.JLabel pssROIVariable;
    private javax.swing.JPanel pssSharesSoldPanel;
    private javax.swing.JLabel pssTotalValueLabel;
    private javax.swing.JLabel pssTotalValueVariable;
    private javax.swing.JLabel registerBankAccountLabel;
    private javax.swing.JFormattedTextField registerBankAccountNumber;
    private javax.swing.JButton registerButton;
    private static javax.swing.JComboBox<String> registerDayComboBox;
    private javax.swing.JLabel registerFullNameLabel;
    private javax.swing.JTextField registerFullNameTextField;
    private javax.swing.JLabel registerHereButton;
    private static javax.swing.JComboBox<String> registerMonthComboBox;
    private javax.swing.JLabel registerMsgLabel;
    private javax.swing.JLabel registerPasswordLabel;
    private javax.swing.JTextField registerPasswordTextField;
    private javax.swing.JPanel registerRightPanel;
    private javax.swing.JLabel registerUsernameLabel;
    private javax.swing.JTextField registerUsernameTextField;
    private javax.swing.JComboBox<String> registerYearComboBox;
    private javax.swing.JTable selectedCPStable;
    private javax.swing.JScrollPane selectedCPStableScrollPane;
    private javax.swing.JPanel showHidePasswordPanel;
    private javax.swing.JList<String> startupInvestmentsList;
    private javax.swing.JLabel topUpAmountLabel;
    private javax.swing.JLabel topUpDollarSign;
    private javax.swing.ButtonGroup valueNumSharesButtonGroup;
    private javax.swing.JLabel walletBalanceAmount;
    private javax.swing.JLabel walletBalanceLabel;
    private javax.swing.JPanel walletBalancePanel;
    private javax.swing.JButton walletButton;
    private javax.swing.JLabel walletLabel;
    private javax.swing.JPanel walletRightPanel;
    private javax.swing.JButton walletTopUpButton;
    private javax.swing.JFormattedTextField walletTopUpTextField;
    private javax.swing.JButton walletWithdrawButton;
    private javax.swing.JCheckBox walletWithdrawEntireBalanceCheckbox;
    private javax.swing.JFormattedTextField walletWithdrawTextField;
    private javax.swing.JDialog warningDialogue;
    private javax.swing.JPanel warningDialogueButtonPanel;
    private javax.swing.JLabel warningDialogueDesc;
    private javax.swing.JLabel warningDialogueIcon;
    private javax.swing.JPanel warningDialoguePanel;
    private javax.swing.JLabel warningDialogueTitle;
    private javax.swing.JButton warningOkButton;
    private javax.swing.JLabel withdrawAmountLabel;
    private javax.swing.JLabel withdrawDollarSign;
    // End of variables declaration//GEN-END:variables
    private CardLayout mainCardLayout;
    private CardLayout loginRegisterCardLayout;
    private CardLayout menuCardLayout;
    private ArrayList<javax.swing.JButton> menuButtonList;
    
    private javax.swing.JButton pressedButton;
    
    final String html = "<html><body style='width: 320spx'>%1s"; // HTML style for use in dialogue popups String formatter
    
    private double cpsValue; // selected CPS value based on table (Invest page)
    
    private ArrayList<Company> portfolioCompanyList;
    private ArrayList<Company> modifiedLowRiskCompanyList;
    private ArrayList<Company> modifiedStartupCompanyList;
    
    private Investment newInvestment;
    private Investment chosenPortfolioInvestment;
    private Company chosenInvestCompany;
    
    private Account newAccount;
    
    // Class objects with information to be saved
    private Account account;
}
